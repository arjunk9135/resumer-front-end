{"version":3,"file":"index-ZiRGOhYV.js","sources":["../../client/src/lib/queryClient.ts","../../client/src/hooks/use-toast.ts","../../client/src/lib/utils.ts","../../client/src/components/ui/toast.tsx","../../client/src/components/ui/toaster.tsx","../../client/src/components/ui/tooltip.tsx","../../shared/schema.ts","../../client/src/hooks/use-auth.tsx","../../client/src/lib/protected-route.tsx","../../client/src/components/ui/card.tsx","../../client/src/pages/not-found.tsx","../../client/src/components/ui/button.tsx","../../client/src/components/ui/label.tsx","../../client/src/components/ui/form.tsx","../../client/src/components/ui/input.tsx","../../client/src/components/ui/tabs.tsx","../../client/src/components/ui/checkbox.tsx","../../client/src/pages/auth-page.jsx","../../client/src/components/ui/scroll-area.tsx","../../client/src/components/layout/sidebar.jsx","../../client/src/components/ui/dropdown-menu.tsx","../../client/src/components/ui/avatar.tsx","../../client/src/components/notifications/notification-item.jsx","../../client/src/components/layout/topbar.jsx","../../client/src/components/layout/page-container.jsx","../../client/src/components/dashboard/stats-card.jsx","../../client/src/components/ui/badge.tsx","../../client/src/components/dashboard/recent-analyses-table.jsx","../../client/src/components/ui/progress.tsx","../../client/src/components/dashboard/in-progress-card.jsx","../../client/src/pages/dashboard-page.jsx","../../client/src/components/resume-analyzer/resume-dropzone.jsx","../../client/src/components/ui/textarea.tsx","../../client/src/components/resume-analyzer/job-description-input.jsx","../../client/src/components/ui/select.tsx","../../client/src/lib/dummy.js","../../client/src/hooks/use-context.tsx","../../client/src/pages/resume-analyzer-page.jsx","../../client/src/pages/analysis-queue-page.jsx","../../client/src/components/results/analytics-overview-new.jsx","../../client/src/components/results/candidates-table.jsx","../../client/src/components/results/charts.jsx","../../client/src/components/results/top-candidates.jsx","../../client/src/components/results/tiered-candidates.jsx","../../client/src/pages/results-page.jsx","../../client/src/pages/history-page.jsx","../../client/src/App.tsx","../../client/src/main.tsx"],"sourcesContent":["import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey[0] as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import { pgTable, text, serial, integer, boolean, timestamp, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  fullName: text(\"full_name\").notNull(),\n  role: text(\"role\").default(\"user\").notNull(),\n  email: text(\"email\").notNull().unique(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n  fullName: true,\n  email: true,\n});\n\nexport const analyses = pgTable(\"analyses\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  jobTitle: text(\"job_title\").notNull(),\n  department: text(\"department\"),\n  jobDescription: text(\"job_description\").notNull(),\n  createdById: integer(\"created_by_id\").notNull(),\n  status: text(\"status\").default(\"queued\").notNull(), // queued, processing, completed, failed\n  candidateCount: integer(\"candidate_count\").default(0).notNull(),\n  averageScore: integer(\"average_score\"),\n  filters: jsonb(\"filters\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertAnalysisSchema = createInsertSchema(analyses).pick({\n  name: true,\n  jobTitle: true,\n  department: true,\n  jobDescription: true,\n  filters: true,\n});\n\nexport const candidates = pgTable(\"candidates\", {\n  id: serial(\"id\").primaryKey(),\n  analysisId: integer(\"analysis_id\").notNull(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  location: text(\"location\"),\n  experience: text(\"experience\"),\n  education: text(\"education\"),\n  skills: jsonb(\"skills\"),\n  matchScore: integer(\"match_score\").notNull(),\n  resumeText: text(\"resume_text\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertCandidateSchema = createInsertSchema(candidates).pick({\n  analysisId: true,\n  name: true,\n  email: true,\n  phone: true,\n  location: true,\n  experience: true,\n  education: true,\n  skills: true,\n  matchScore: true,\n  resumeText: true,\n});\n\nexport const notifications = pgTable(\"notifications\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").notNull(),\n  title: text(\"title\").notNull(),\n  message: text(\"message\").notNull(),\n  type: text(\"type\").default(\"info\").notNull(),\n  isRead: boolean(\"is_read\").default(false).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  relatedId: integer(\"related_id\"),\n  relatedType: text(\"related_type\"),\n});\n\nexport const insertNotificationSchema = createInsertSchema(notifications).pick({\n  userId: true,\n  title: true,\n  message: true,\n  type: true,\n  relatedId: true,\n  relatedType: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Analysis = typeof analyses.$inferSelect;\nexport type InsertAnalysis = z.infer<typeof insertAnalysisSchema>;\nexport type Candidate = typeof candidates.$inferSelect;\nexport type InsertCandidate = z.infer<typeof insertCandidateSchema>;\nexport type Notification = typeof notifications.$inferSelect;\nexport type InsertNotification = z.infer<typeof insertNotificationSchema>;\n","import { createContext, useContext } from \"react\";\nimport {\n  useQuery,\n  useMutation,\n} from \"@tanstack/react-query\";\nimport { insertUserSchema, User as SelectUser, InsertUser } from \"@shared/schema\";\nimport { getQueryFn, apiRequest, queryClient } from \"../lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\n// Auth context type\nconst AuthContext = createContext(null);\n\n// Login credentials type\nconst loginSchema = insertUserSchema.pick({\n  username: true,\n  password: true,\n});\n\n// TEMPORARY: Mock user for testing\nconst mockUser = {\n  id: 1,\n  username: \"testuser\",\n  fullName: \"Test User\",\n  role: \"HR Manager\",\n  email: \"test@example.com\",\n  createdAt: new Date().toISOString()\n};\n\nexport function AuthProvider({ children }) {\n  const { toast } = useToast();\n  \n  // TEMPORARY: Always return mock user for testing instead of making API call\n  const {\n    data: user,\n    error,\n    isLoading,\n  } = useQuery({\n    queryKey: [\"/api/user\"],\n    queryFn: () => Promise.resolve(mockUser),\n  });\n\n  // Login mutation (bypassed for testing)\n  const loginMutation = useMutation({\n    mutationFn: async (credentials) => {\n      // TEMPORARY: Just return mock user instead of API call\n      return mockUser;\n    },\n    onSuccess: (user) => {\n      queryClient.setQueryData([\"/api/user\"], user);\n      toast({\n        title: \"Login successful\",\n        description: `Welcome back, ${user.fullName || user.username}!`,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Login failed\",\n        description: error.message || \"Invalid username or password\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Register mutation (bypassed for testing)\n  const registerMutation = useMutation({\n    mutationFn: async (credentials) => {\n      // TEMPORARY: Just return mock user instead of API call\n      return mockUser;\n    },\n    onSuccess: (user) => {\n      queryClient.setQueryData([\"/api/user\"], user);\n      toast({\n        title: \"Registration successful\",\n        description: `Welcome to TalentInsight, ${user.fullName || user.username}!`,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Registration failed\",\n        description: error.message || \"Could not create account\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Logout mutation (bypassed for testing)\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      // TEMPORARY: No API call for testing\n      return null;\n    },\n    onSuccess: () => {\n      // We won't actually remove the user for testing\n      toast({\n        title: \"Logged out\",\n        description: \"You have been successfully logged out.\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Logout failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user || mockUser, // Always provide mock user for testing\n        isLoading: false, // Never show loading state for testing\n        error: null,\n        loginMutation,\n        logoutMutation,\n        registerMutation,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n","import { Route } from \"wouter\";\n\n// TEMPORARY: Authentication check bypassed for testing\nexport function ProtectedRoute({\n  path,\n  component: Component,\n}) {\n  // Bypassing authentication check for testing\n  // In a real app, this would check if the user is authenticated\n  return <Route path={path} component={Component} />\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import { useState } from \"react\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Redirect } from \"wouter\";\nimport { insertUserSchema } from \"@shared/schema\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { UserRound, Mail, LockKeyhole } from \"lucide-react\";\n\n// Login schema\nconst loginSchema = z.object({\n  username: z.string().min(3, \"Username must be at least 3 characters\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  rememberMe: z.boolean().optional(),\n});\n\n// Registration schema extending from the insert user schema from shared schema\nconst registerSchema = insertUserSchema.extend({\n  confirmPassword: z.string().min(6, \"Password must be at least 6 characters\"),\n  acceptTerms: z.boolean().refine(val => val === true, {\n    message: \"You must accept the terms and conditions\",\n  }),\n}).refine(data => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport default function AuthPage() {\n  const [activeTab, setActiveTab] = useState(\"login\");\n  const { user, loginMutation, registerMutation } = useAuth();\n  \n  // Login form\n  const loginForm = useForm({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n      rememberMe: false,\n    },\n  });\n\n  // Register form\n  const registerForm = useForm({\n    resolver: zodResolver(registerSchema),\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      fullName: \"\",\n      email: \"\",\n      acceptTerms: false,\n    },\n  });\n\n  // Handle login submission\n  function onLoginSubmit(data) {\n    loginMutation.mutate(data);\n  }\n\n  // Handle registration submission\n  function onRegisterSubmit(data) {\n    const { confirmPassword, acceptTerms, ...userData } = data;\n    registerMutation.mutate(userData);\n  }\n\n  // Redirect if user is already logged in\n  if (false) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col md:flex-row bg-background\">\n      {/* Hero Section */}\n      <div className=\"bg-primary hidden md:flex md:w-1/2 flex-col justify-center items-center p-10 text-white\">\n        <div className=\"max-w-md mx-auto\">\n          <h1 className=\"text-4xl font-display font-bold mb-6\">TalentInsight</h1>\n          <h2 className=\"text-2xl font-display font-semibold mb-4\">Modern HR recruitment analytics</h2>\n          <p className=\"mb-8 text-white/90\">\n            Streamline your recruitment process with AI-powered resume screening, candidate evaluation, and insightful analytics.\n          </p>\n          \n          <div className=\"space-y-6\">\n            <div className=\"flex items-start space-x-3\">\n              <div className=\"bg-white/20 p-2 rounded-full\">\n                <UserRound className=\"h-5 w-5\" />\n              </div>\n              <div>\n                <h3 className=\"font-medium\">Smart Candidate Screening</h3>\n                <p className=\"text-sm text-white/80\">AI-powered analysis of up to 200 resumes at once</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-3\">\n              <div className=\"bg-white/20 p-2 rounded-full\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M3 3v18h18\" />\n                  <path d=\"M18 17V9\" />\n                  <path d=\"M13 17V5\" />\n                  <path d=\"M8 17v-3\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"font-medium\">Powerful Analytics</h3>\n                <p className=\"text-sm text-white/80\">Visualize candidate data with insightful charts and metrics</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start space-x-3\">\n              <div className=\"bg-white/20 p-2 rounded-full\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                  <polyline points=\"12 6 12 12 16 14\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"font-medium\">Save Time</h3>\n                <p className=\"text-sm text-white/80\">Cut resume review time by up to 75% with automated processing</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Form Section */}\n      <div className=\"flex-1 flex items-center justify-center p-6\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"space-y-1 text-center\">\n            <CardTitle className=\"text-2xl font-display text-primary md:hidden\">TalentInsight</CardTitle>\n            <CardTitle className=\"text-xl\">Welcome</CardTitle>\n            <CardDescription>Sign in to your account or create a new one</CardDescription>\n          </CardHeader>\n          \n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n              <TabsTrigger value=\"login\">Log In</TabsTrigger>\n              <TabsTrigger value=\"register\">Register</TabsTrigger>\n            </TabsList>\n            \n            {/* Login Form */}\n            <TabsContent value=\"login\">\n              <Form {...loginForm}>\n                <form onSubmit={loginForm.handleSubmit(onLoginSubmit)} className=\"space-y-4\">\n                  <CardContent className=\"space-y-4\">\n                    <FormField\n                      control={loginForm.control}\n                      name=\"username\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Username</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <UserRound className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n                              <Input className=\"pl-10\" placeholder=\"Enter your username\" {...field} />\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={loginForm.control}\n                      name=\"password\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Password</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <LockKeyhole className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n                              <Input className=\"pl-10\" type=\"password\" placeholder=\"Enter your password\" {...field} />\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <FormField\n                        control={loginForm.control}\n                        name=\"rememberMe\"\n                        render={({ field }) => (\n                          <FormItem className=\"flex items-center space-x-2\">\n                            <FormControl>\n                              <Checkbox\n                                checked={field.value}\n                                onCheckedChange={field.onChange}\n                              />\n                            </FormControl>\n                            <FormLabel className=\"text-sm font-normal\">Remember me</FormLabel>\n                          </FormItem>\n                        )}\n                      />\n                      <a href=\"#\" className=\"text-sm text-primary hover:underline\">\n                        Forgot password?\n                      </a>\n                    </div>\n                  </CardContent>\n                  \n                  <CardFooter>\n                    <Button\n                      type=\"submit\"\n                      className=\"w-full bg-primary\"\n                      disabled={loginMutation.isPending}\n                    >\n                      {loginMutation.isPending ? \"Signing in...\" : \"Sign in\"}\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Form>\n            </TabsContent>\n            \n            {/* Register Form */}\n            <TabsContent value=\"register\">\n              <Form {...registerForm}>\n                <form onSubmit={registerForm.handleSubmit(onRegisterSubmit)} className=\"space-y-4\">\n                  <CardContent className=\"space-y-4\">\n                    <FormField\n                      control={registerForm.control}\n                      name=\"fullName\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Full Name</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <UserRound className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n                              <Input className=\"pl-10\" placeholder=\"Enter your full name\" {...field} />\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={registerForm.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Email</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <Mail className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n                              <Input className=\"pl-10\" type=\"email\" placeholder=\"Enter your email\" {...field} />\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={registerForm.control}\n                      name=\"username\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Username</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <UserRound className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n                              <Input className=\"pl-10\" placeholder=\"Choose a username\" {...field} />\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={registerForm.control}\n                      name=\"password\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Password</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <LockKeyhole className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n                              <Input className=\"pl-10\" type=\"password\" placeholder=\"Create a password\" {...field} />\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={registerForm.control}\n                      name=\"confirmPassword\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Confirm Password</FormLabel>\n                          <FormControl>\n                            <div className=\"relative\">\n                              <LockKeyhole className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n                              <Input className=\"pl-10\" type=\"password\" placeholder=\"Confirm your password\" {...field} />\n                            </div>\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={registerForm.control}\n                      name=\"acceptTerms\"\n                      render={({ field }) => (\n                        <FormItem className=\"flex items-start space-x-2 mt-4\">\n                          <FormControl>\n                            <Checkbox\n                              checked={field.value}\n                              onCheckedChange={field.onChange}\n                            />\n                          </FormControl>\n                          <div className=\"space-y-1 leading-none\">\n                            <FormLabel className=\"text-sm font-normal\">\n                              I accept the <a href=\"#\" className=\"text-primary hover:underline\">terms and conditions</a>\n                            </FormLabel>\n                            <FormMessage />\n                          </div>\n                        </FormItem>\n                      )}\n                    />\n                  </CardContent>\n                  \n                  <CardFooter>\n                    <Button\n                      type=\"submit\"\n                      className=\"w-full bg-primary\"\n                      disabled={registerMutation.isPending}\n                    >\n                      {registerMutation.isPending ? \"Creating account...\" : \"Create account\"}\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Form>\n            </TabsContent>\n          </Tabs>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","import { useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { useAuth } from '@/hooks/use-auth';\nimport { cn } from '@/lib/utils';\n\nimport {\n  LayoutDashboard,\n  FileSearch,\n  Clock,\n  BarChartBig,\n  History,\n  Settings,\n  LogOut,\n  Menu,\n  X\n} from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\nexport default function Sidebar() {\n  const [location] = useLocation();\n  const { logoutMutation } = useAuth();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  \n  const toggleMobileMenu = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n  };\n  \n  const closeMobileMenu = () => {\n    setMobileMenuOpen(false);\n  };\n  \n  const navItems = [\n    { title: 'Dashboard', icon: <LayoutDashboard className=\"h-5 w-5\" />, path: '/' },\n    { title: 'Resume Analyzer', icon: <FileSearch className=\"h-5 w-5\" />, path: '/resume-analyzer' },\n    { title: 'Analysis Queue', icon: <Clock className=\"h-5 w-5\" />, path: '/analysis-queue' },\n    { title: 'Results', icon: <BarChartBig className=\"h-5 w-5\" />, path: '/results' },\n    { title: 'History', icon: <History className=\"h-5 w-5\" />, path: '/history' },\n    { title: 'Settings', icon: <Settings className=\"h-5 w-5\" />, path: '/settings' },\n  ];\n  \n  const handleLogout = () => {\n    logoutMutation.mutate();\n  };\n  \n  const isActive = (path) => {\n    if (path === '/') return location === path;\n    return location.startsWith(path);\n  };\n  \n  const renderNavItems = () =>\n  navItems.map(item => {\n    const active = isActive(item.path);\n    return (\n      <Link \n        key={item.path} \n        href={item.path}\n        onClick={closeMobileMenu}\n        className={cn(\n          \"flex items-center py-3 px-4 rounded-md transition-colors\",\n          active\n            ? \"bg-primary text-white\"\n            : \"text-black hover:bg-primary hover:text-white\"\n        )}\n      >\n        {item.icon}\n        <span className=\"ml-3\">{item.title}</span>\n      </Link>\n    );\n  });\n\n  \n  // Mobile menu button\n  const mobileMenuButton = (\n    <Button \n      variant=\"ghost\" \n      size=\"icon\" \n      className=\"md:hidden ml-2\" \n      onClick={toggleMobileMenu}\n    >\n      <Menu className=\"h-6 w-6\" />\n      <span className=\"sr-only\">Open menu</span>\n    </Button>\n  );\n  \n  // Mobile sidebar\n  const mobileSidebar = (\n    <div className={`fixed inset-0 z-40 ${mobileMenuOpen ? 'block' : 'hidden'}`}>\n      <div className=\"absolute inset-0 bg-black opacity-50\" onClick={closeMobileMenu}></div>\n      <div className=\"absolute inset-y-0 left-0 w-64 bg-white shadow-card\">\n        <div className=\"p-4 border-b flex justify-between items-center\">\n          <h1 className=\"text-2xl font-display font-bold text-primary\">TalentInsight</h1>\n          <Button variant=\"ghost\" size=\"icon\" onClick={closeMobileMenu}>\n            <X className=\"h-5 w-5\" />\n          </Button>\n        </div>\n        <ScrollArea className=\"flex-1 h-[calc(100vh-136px)]\">\n          <nav className=\"flex-1 px-2 py-4 space-y-1\">\n            {renderNavItems()}\n          </nav>\n        </ScrollArea>\n        <div className=\"p-4 border-t\">\n          <Button \n            variant=\"ghost\" \n            className=\"w-full justify-start text-gray-700 hover:bg-gray-100\" \n            onClick={handleLogout}\n          >\n            <LogOut className=\"mr-3 h-5 w-5\" />\n            <span>Sign Out</span>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n  \n  return (\n    <>\n      {mobileMenuButton}\n      {mobileSidebar}\n      \n      <div className=\"hidden md:flex flex-col w-64 bg-white shadow-card\">\n        <div className=\"p-4 border-b\">\n          <h1 className=\"text-2xl font-display font-bold text-primary\">TalentInsight</h1>\n        </div>\n        <ScrollArea className=\"flex-1 h-[calc(100vh-136px)]\">\n          <nav className=\"flex-1 px-2 py-4 space-y-1\">\n            {renderNavItems()}\n          </nav>\n        </ScrollArea>\n        <div className=\"p-4 border-t\">\n          <Button \n            variant=\"ghost\" \n            className=\"w-full justify-start text-gray-700 hover:bg-gray-100\" \n            onClick={handleLogout}\n            disabled={logoutMutation.isPending}\n          >\n            <LogOut className=\"mr-3 h-5 w-5\" />\n            <span>{logoutMutation.isPending ? \"Signing out...\" : \"Sign Out\"}</span>\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","import { Link } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default function NotificationItem({ notification }) {\n  // Helper functions to determine notification styles based on type\n  const getTypeStyles = (type) => {\n    switch (type) {\n      case 'success':\n        return { bgColor: 'bg-green-100', textColor: 'text-green-600' };\n      case 'warning':\n        return { bgColor: 'bg-yellow-100', textColor: 'text-yellow-600' };\n      case 'error':\n        return { bgColor: 'bg-red-100', textColor: 'text-red-600' };\n      case 'info':\n      default:\n        return { bgColor: 'bg-blue-100', textColor: 'text-blue-600' };\n    }\n  };\n\n  const getTypeIcon = (type) => {\n    switch (type) {\n      case 'success':\n        return '✓';\n      case 'warning':\n        return '⚠';\n      case 'error':\n        return '✖';\n      case 'info':\n      default:\n        return 'ℹ';\n    }\n  };\n\n  const styles = getTypeStyles(notification.type);\n  \n  return (\n    <div className={`p-4 hover:bg-gray-50 ${notification.isRead ? 'opacity-75' : ''}`}>\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0 mr-3\">\n          <div className={`h-8 w-8 rounded-full flex items-center justify-center ${styles.bgColor}`}>\n            <span className={`text-sm ${styles.textColor}`}>\n              {getTypeIcon(notification.type)}\n            </span>\n          </div>\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <p className=\"text-sm font-medium text-text\">{notification.title}</p>\n          <p className=\"text-xs text-gray-500 mt-1\">{notification.message}</p>\n          \n          {notification.relatedId && notification.relatedType === 'analysis' && (\n            <div className=\"mt-1\">\n              <Link href={`/results/${notification.relatedId}`}>\n                <Button variant=\"link\" className=\"text-xs text-primary p-0 h-auto\">\n                  View Results\n                </Button>\n              </Link>\n            </div>\n          )}\n          \n          <p className=\"text-xs text-gray-400 mt-1\">\n            {formatDistanceToNow(new Date(notification.createdAt), { addSuffix: true })}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Bell } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\n\nimport { \n  DropdownMenu, \n  DropdownMenuContent, \n  DropdownMenuItem, \n  DropdownMenuLabel, \n  DropdownMenuSeparator, \n  DropdownMenuTrigger \n} from '@/components/ui/dropdown-menu';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport NotificationItem from '@/components/notifications/notification-item';\n\nexport default function Topbar() {\n  const { user } = useAuth();\n  const [showNotifications, setShowNotifications] = useState(false);\n  \n  const { data: notifications = [], refetch: refetchNotifications } = useQuery({\n    queryKey: ['/api/notifications'],\n    staleTime: 60000 // 1 minute\n  });\n  \n  const unreadCount = notifications.filter(n => !n.isRead).length;\n  \n  const handleNotificationClick = async () => {\n    setShowNotifications(!showNotifications);\n    \n    if (unreadCount > 0) {\n      try {\n        await apiRequest('POST', '/api/notifications/read-all');\n        refetchNotifications();\n      } catch (error) {\n        console.error('Failed to mark notifications as read:', error);\n      }\n    }\n  };\n  \n  // Get user initials\n  const getInitials = (name) => {\n    if (!name) return 'U';\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\n  };\n  \n  return (\n    <header className=\"bg-white shadow-card\">\n      <div className=\"flex items-center justify-between px-4 py-3\">\n        <div>\n          {/* Empty div to maintain spacing */}\n        </div>\n        \n        <div className=\"flex items-center\">\n          {/* Remaining Credits */}\n{/* Remaining Credits */}\n<div className=\"flex items-center mr-4 px-3 py-1.5 bg-green-50 text-green-700 text-sm font-medium rounded-full shadow-sm\">\n  <div className=\"flex items-center justify-center mr-2\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"size-6\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v12m-3-2.818.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\n</svg>\n\n  </div>\n  <span className=\"text-sm font-semibold\">\n    Credits: <span className=\"font-bold\">35</span>\n  </span>\n</div>\n\n\n\n          {/* Notifications */}\n          <div className=\"relative mr-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"relative text-gray-500 hover:text-gray-700 focus:outline-none\"\n              onClick={handleNotificationClick}\n            >\n              <Bell className=\"h-7 w-7\" />\n              {unreadCount > 0 && (\n                <span className=\"absolute top-0 right-0 inline-flex items-center justify-center w-4 h-4 text-xs font-bold text-white bg-accent rounded-full\">\n                  {unreadCount > 9 ? '9+' : unreadCount}\n                </span>\n              )}\n            </Button>\n            \n            {showNotifications && (\n              <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-md shadow-lg z-10\">\n                <div className=\"p-3 border-b border-gray-100 flex justify-between items-center\">\n                  <h3 className=\"text-sm font-semibold\">Notifications</h3>\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\" \n                    className=\"text-xs text-primary h-auto py-1\"\n                    onClick={() => apiRequest('POST', '/api/notifications/read-all').then(() => refetchNotifications())}\n                  >\n                    Mark all as read\n                  </Button>\n                </div>\n                <div className=\"max-h-[calc(100vh-200px)] overflow-y-auto\">\n                  {notifications.length === 0 ? (\n                    <div className=\"py-6 px-4 text-center text-gray-500\">\n                      <p>No notifications</p>\n                    </div>\n                  ) : (\n                    notifications.map(notification => (\n                      <NotificationItem \n                        key={notification.id} \n                        notification={notification} \n                      />\n                    ))\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {/* User profile */}\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" className=\"relative rounded-full h-8 w-8 p-0\">\n                <Avatar>\n                  <AvatarImage src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80\" alt=\"User\" />\n                  <AvatarFallback>{getInitials(user?.fullName)}</AvatarFallback>\n                </Avatar>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuLabel>\n                <div className=\"flex flex-col space-y-1\">\n                  <p className=\"text-sm font-medium\">{user?.fullName || user?.username}</p>\n                  <p className=\"text-xs text-muted-foreground\">{user?.role || 'HR Manager'}</p>\n                </div>\n              </DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>Profile</DropdownMenuItem>\n              <DropdownMenuItem>Settings</DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>Sign out</DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import Sidebar from './sidebar';\nimport Topbar from './topbar';\n\nexport default function PageContainer({ children, title }) {\n  return (\n    <div className=\"flex h-screen overflow-hidden bg-background\">\n      <Sidebar />\n      \n      <div className=\"flex flex-col flex-1 overflow-hidden\">\n        <Topbar />\n        \n        <main className=\"flex-1 overflow-y-auto custom-scrollbar bg-background p-6\">\n          {title && (\n            <div className=\"flex items-center justify-between mb-6\">\n              <h1 className=\"text-2xl font-display font-bold text-text\">{title}</h1>\n            </div>\n          )}\n          \n          {children}\n        </main>\n      </div>\n    </div>\n  );\n}\n","import { FileText, UserSearch, Clock, Award } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport default function StatsCard({ title, value, change, icon, color = 'primary' }) {\n  // Icon map\n  const icons = {\n    'file-list': <FileText className={`text-xl text-${color}`} />,\n    'user-search': <UserSearch className={`text-xl text-${color}`} />,\n    'time': <Clock className={`text-xl text-${color}`} />,\n    'award': <Award className={`text-xl text-${color}`} />\n  };\n  \n  // Color classes for the change text\n  const changeColorClasses = {\n    'up': 'text-secondary',\n    'down': 'text-accent',\n    undefined: 'text-accent'\n  };\n  \n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-card\">\n      <div className=\"flex items-center\">\n        <div className={cn(`p-3 rounded-md bg-opacity-10`, `bg-${color}`)}>\n          {icons[icon]}\n        </div>\n        <div className=\"ml-4\">\n          <h3 className=\"text-sm font-medium text-gray-500\">{title}</h3>\n          <p className=\"text-2xl font-semibold text-text\">{value}</p>\n        </div>\n      </div>\n      \n      {change && (\n        <div className=\"mt-4\">\n          {change.direction && (\n            <span className={cn(\"text-sm font-medium\", changeColorClasses[change.direction])}>\n              {change.direction === 'up' ? '↑' : '↓'} {change.value}\n            </span>\n          )}\n          {!change.direction && (\n            <span className=\"text-accent text-sm font-medium\">\n              {change.value}\n            </span>\n          )}\n          {change.text && (\n            <span className=\"text-sm text-gray-500\"> {change.text}</span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import { Link } from 'wouter';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default function RecentAnalysesTable({ analyses }) {\n  if (!analyses || analyses.length === 0) {\n    return (\n      <div className=\"p-6 text-center\">\n        <p className=\"text-gray-500 mb-3\">No analyses found</p>\n        <Link href=\"/resume-analyzer\">\n          <Button>Start your first analysis</Button>\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full divide-y divide-gray-200\">\n        <thead>\n          <tr>\n            <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Job Title</th>\n            <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Candidates</th>\n            <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n            <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n            <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"></th>\n          </tr>\n        </thead>\n        <tbody className=\"divide-y divide-gray-200\">\n          {analyses.map(analysis => (\n            <tr key={analysis.id} className=\"hover:bg-gray-50\">\n              <td className=\"px-4 py-4 whitespace-nowrap\">\n                <div className=\"text-sm font-medium text-text\">{analysis.jobTitle}</div>\n                {analysis.department && (\n                  <div className=\"text-xs text-gray-500\">{analysis.department}</div>\n                )}\n              </td>\n              <td className=\"px-4 py-4 whitespace-nowrap\">\n                <div className=\"text-sm text-gray-900\">{analysis.candidateCount}</div>\n              </td>\n              <td className=\"px-4 py-4 whitespace-nowrap\">\n                <div className=\"text-sm text-gray-500\">\n                  {analysis.createdAt ? (\n                    formatDistanceToNow(new Date(analysis.createdAt), { addSuffix: true })\n                  ) : 'Unknown date'}\n                </div>\n              </td>\n              <td className=\"px-4 py-4 whitespace-nowrap\">\n                <Badge variant={getStatusVariant(analysis.status)}>\n                  {getStatusLabel(analysis.status)}\n                </Badge>\n              </td>\n              <td className=\"px-4 py-4 whitespace-nowrap text-right\">\n                <Link href={`/results/${analysis.id}`}>\n                  <Button variant=\"ghost\" size=\"sm\">View</Button>\n                </Link>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n// Helper functions\nfunction getStatusVariant(status) {\n  switch(status) {\n    case 'completed': return 'success';\n    case 'processing': return 'default';\n    case 'queued': return 'secondary';\n    case 'failed': return 'destructive';\n    default: return 'outline';\n  }\n}\n\nfunction getStatusLabel(status) {\n  switch(status) {\n    case 'completed': return 'Completed';\n    case 'processing': return 'Processing';\n    case 'queued': return 'Queued';\n    case 'failed': return 'Failed';\n    default: return status;\n  }\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","import { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Link } from 'wouter';\n\nexport default function InProgressCard({ analysis }) {\n  // Determine progress percentage based on status\n  const getProgressPercentage = () => {\n    if (analysis.status === 'queued') return 0;\n    if (analysis.status === 'completed') return 100;\n    \n    // For processing status, generate a random percentage between 15-90%\n    // In a real app, this would come from the backend\n    return Math.floor(Math.random() * 75) + 15;\n  };\n  \n  const progressPercentage = getProgressPercentage();\n  \n  // Calculate remaining time estimate (mock values)\n  const getRemainingTime = () => {\n    if (analysis.status === 'queued') return 'Starting soon';\n    if (analysis.status === 'completed') return 'Completed';\n    \n    const remainingMinutes = Math.floor((100 - progressPercentage) / 100 * 60);\n    return `~${remainingMinutes} min remaining`;\n  };\n  \n  // Format time since creation\n  const getStartTime = () => {\n    if (!analysis.createdAt) return 'Recently';\n    \n    return formatDistanceToNow(new Date(analysis.createdAt), { addSuffix: false }) + ' ago';\n  };\n  \n  return (\n    <div className=\"border border-gray-200 rounded-md p-4\">\n      <div className=\"flex justify-between\">\n        <Link href={`/results/${analysis.id}`}>\n          <h3 className=\"font-medium text-text hover:text-primary cursor-pointer\">\n            {analysis.jobTitle}\n          </h3>\n        </Link>\n        <Badge variant={analysis.status === 'queued' ? 'secondary' : 'default'}>\n          {analysis.status === 'queued' ? 'Queued' : 'Processing'}\n        </Badge>\n      </div>\n      \n      <p className=\"text-sm text-gray-500 mt-1\">\n        {analysis.candidateCount} candidate{analysis.candidateCount !== 1 ? 's' : ''}\n      </p>\n      \n      <div className=\"mt-3 w-full\">\n        <Progress value={progressPercentage} className=\"h-2\" />\n      </div>\n      \n      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n        <span>\n          {analysis.status === 'queued' ? 'Queued: ' : 'Started: '}\n          {getStartTime()}\n        </span>\n        <span>{getRemainingTime()}</span>\n      </div>\n    </div>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { Link } from 'wouter';\n\nimport PageContainer from '@/components/layout/page-container';\nimport StatsCard from '@/components/dashboard/stats-card';\nimport RecentAnalysesTable from '@/components/dashboard/recent-analyses-table';\nimport InProgressCard from '@/components/dashboard/in-progress-card';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { PlusIcon } from 'lucide-react';\n\nexport default function DashboardPage() {\n  // Fetch analyses data\n  const { data: analyses = [] } = useQuery({\n    queryKey: ['/api/analyses'],\n  });\n  \n  // Filter analyses by status\n  const completedAnalyses = analyses.filter(a => a.status === 'completed');\n  const inProgressAnalyses = analyses.filter(a => a.status === 'processing' || a.status === 'queued');\n  \n  // Calculate stats\n  const totalAnalyses = analyses.length;\n  const totalCandidates = analyses.reduce((sum, analysis) => sum + analysis.candidateCount, 0);\n  const queuedAnalyses = analyses.filter(a => a.status === 'queued').length;\n  \n  const averageScores = completedAnalyses.filter(a => a.averageScore !== null).map(a => a.averageScore);\n  const avgMatchScore = averageScores.length > 0 \n    ? (averageScores.reduce((sum, score) => sum + score, 0) / averageScores.length).toFixed(1) \n    : '-';\n  \n  return (\n    <PageContainer title=\"Dashboard\">\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\n        <StatsCard\n          title=\"Total Analyses\"\n          value={totalAnalyses}\n          change={{ value: \"14%\", direction: \"up\", text: \"from last month\" }}\n          icon=\"file-list\"\n          color=\"primary\"\n        />\n        \n        <StatsCard\n          title=\"Candidates Processed\"\n          value={totalCandidates}\n          change={{ value: \"7%\", direction: \"up\", text: \"from last month\" }}\n          icon=\"user-search\"\n          color=\"secondary\"\n        />\n        \n        <StatsCard\n          title=\"In Queue\"\n          value={queuedAnalyses}\n          change={{ value: queuedAnalyses > 0 ? `${queuedAnalyses} new` : \"0 new\", text: \"in the last 24h\" }}\n          icon=\"time\"\n          color=\"accent\"\n        />\n        \n        <StatsCard\n          title=\"Avg Match Score\"\n          value={`${avgMatchScore}%`}\n          change={{ value: \"2.3%\", direction: \"up\", text: \"from last week\" }}\n          icon=\"award\"\n          color=\"primary\"\n        />\n      </div>\n\n      {/* Recent Activity and Upcoming Analysis */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2\">\n          <Card>\n            <CardHeader className=\"px-6 py-5 border-b border-gray-100\">\n              <CardTitle className=\"font-display font-semibold text-lg text-text\">Recent Analysis Results</CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-0\">\n              <RecentAnalysesTable analyses={completedAnalyses.slice(0, 4)} />\n            </CardContent>\n          </Card>\n        </div>\n\n        <div>\n          <Card>\n            <CardHeader className=\"px-6 py-5 border-b border-gray-100\">\n              <CardTitle className=\"font-display font-semibold text-lg text-text\">In Progress</CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-6 space-y-5\">\n              {inProgressAnalyses.length > 0 ? (\n                inProgressAnalyses.slice(0, 3).map(analysis => (\n                  <InProgressCard key={analysis.id} analysis={analysis} />\n                ))\n              ) : (\n                <div className=\"text-center py-8\">\n                  <p className=\"text-gray-500 mb-4\">No analyses in progress</p>\n                  <Link href=\"/resume-analyzer\">\n                    <Button>\n                      <PlusIcon className=\"h-4 w-4 mr-2\" />\n                      Start New Analysis\n                    </Button>\n                  </Link>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </PageContainer>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Upload, X, FileText, FileArchive } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\n\nexport default function ResumeDropzone({ files, setFiles, onUploadProgress }) {\n  const [dragActive, setDragActive] = useState(false);\n  const [batchProgress, setBatchProgress] = useState(0);\n  \n  const onDrop = useCallback((acceptedFiles) => {\n    // Filter for valid file types (PDF, DOC, DOCX, and ZIP)\n    const validFiles = acceptedFiles.filter(\n      file => [\n        'application/pdf',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/zip',\n        'application/x-zip-compressed'\n      ].includes(file.type)\n    );\n    \n    // For large batches (over 10 files), simulate progress updates\n    if (validFiles.length > 10) {\n      const totalFiles = validFiles.length;\n      let processedCount = 0;\n      \n      const processNextBatch = (startIndex) => {\n        const batchSize = 5;\n        const endIndex = Math.min(startIndex + batchSize, totalFiles);\n        const currentBatch = validFiles.slice(startIndex, endIndex);\n        \n        processedCount += currentBatch.length;\n        const progress = Math.floor((processedCount / totalFiles) * 100);\n        setBatchProgress(progress);\n        \n        if (onUploadProgress) {\n          onUploadProgress(progress);\n        }\n        \n        setFiles(prevFiles => [...prevFiles, ...currentBatch]);\n        \n        if (endIndex < totalFiles) {\n          setTimeout(() => processNextBatch(endIndex), 300);\n        } else {\n          setBatchProgress(0);\n        }\n      };\n      \n      processNextBatch(0);\n    } else {\n      setFiles(prevFiles => [...prevFiles, ...validFiles]);\n    }\n  }, [setFiles, onUploadProgress]);\n  \n  const removeFile = (index) => {\n    setFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n  \n  const { getRootProps, getInputProps, isDragActive, open } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n      'application/zip': ['.zip'],\n      'application/x-zip-compressed': ['.zip']\n    },\n    maxSize: 10485760 * 2, // 20MB (larger for ZIP files)\n    noClick: false,\n    noKeyboard: true,\n    onDragEnter: () => setDragActive(true),\n    onDragLeave: () => setDragActive(false),\n  });\n  \n  const getFileIcon = (fileType) => {\n    if (fileType === 'application/zip' || fileType === 'application/x-zip-compressed') {\n      return <FileArchive className=\"h-5 w-5 text-gray-500 mr-2 flex-shrink-0\" />;\n    }\n    return <FileText className=\"h-5 w-5 text-gray-500 mr-2 flex-shrink-0\" />;\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div \n        {...getRootProps()}\n        className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md transition-colors\n                   ${dragActive || isDragActive ? 'border-primary bg-primary/5' : 'border-gray-300 bg-white'}`}\n      >\n        <div className=\"space-y-1 text-center\">\n          <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n          <div className=\"flex text-sm text-gray-600 justify-center\">\n            <label className=\"relative cursor-pointer rounded-md font-medium text-primary hover:text-primary-dark focus-within:outline-none\">\n              <span className=\"mr-1\">Upload resumes</span>\n              <input {...getInputProps()} />\n            </label>\n            <p>or drag and drop</p>\n          </div>\n          <p className=\"text-xs text-gray-500\">\n            PDF, DOC, DOCX, or ZIP up to 20MB each (max 200 files)\n          </p>\n        </div>\n      </div>\n      \n      {files.length > 0 && (\n        <div className=\"mt-4 space-y-2 max-h-60 overflow-y-auto\">\n          {files.map((file, index) => (\n            <div key={index} className=\"flex items-center justify-between text-sm p-2 bg-gray-50 rounded\">\n              <div className=\"flex items-center overflow-hidden\">\n                {getFileIcon(file.type)}\n                <span className=\"truncate\">{file.name}</span>\n                <span className=\"ml-2 text-gray-400 text-xs\">\n                  ({(file.size / 1024).toFixed(1)} KB)\n                </span>\n              </div>\n              <Button \n                variant=\"ghost\" \n                size=\"icon\" \n                className=\"h-8 w-8 text-gray-500 hover:text-red-500\"\n                onClick={() => removeFile(index)}\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {batchProgress > 0 && (\n        <div className=\"mt-2\">\n          <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\n            <span>Processing large batch upload</span>\n            <span>{batchProgress}%</span>\n          </div>\n          <Progress value={batchProgress} className=\"h-2\" />\n        </div>\n      )}\n      \n      {files.length > 0 && (\n        <div className=\"flex items-center mt-2\">\n          <span className=\"text-sm text-gray-600\">\n            {files.length} file{files.length !== 1 ? 's' : ''} selected\n          </span>\n          <Button variant=\"link\" onClick={() => setFiles([])} className=\"text-sm ml-2 p-0 h-auto\">\n            Clear all\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import { useState } from 'react';\nimport { Wand2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { FormLabel } from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\n\n// Sample job description templates\nconst jobTemplates = {\n  \"frontend-developer\": \n    `We're looking for a talented Frontend Developer who is passionate about building intuitive user interfaces. The ideal candidate has 3+ years of experience with modern JavaScript frameworks (React preferred), strong HTML/CSS skills, and experience with responsive design. Responsibilities include implementing UI components, collaborating with designers, and ensuring cross-browser compatibility.`,\n  \n  \"backend-developer\":\n    `Our team is seeking a Backend Developer with expertise in building scalable services. You should have 4+ years of experience with server-side languages (Node.js, Python, or Java), database design, and API development. Experience with cloud platforms (AWS/Azure/GCP) and containerization is a plus. You'll be responsible for developing APIs, optimizing database performance, and ensuring system reliability.`,\n  \n  \"data-scientist\":\n    `We're looking for a Data Scientist to extract valuable insights from our data. The ideal candidate has 3+ years of experience with statistical analysis, machine learning algorithms, and data visualization. Proficiency in Python and SQL is required. You'll be responsible for developing predictive models, analyzing trends, and communicating findings to stakeholders.`,\n  \n  \"product-manager\":\n    `We're seeking a Product Manager to lead product development from conception to launch. The ideal candidate has 5+ years of experience in product management, a track record of shipping successful products, and excellent communication skills. You'll be responsible for defining product strategy, gathering requirements, and working with engineering and design teams to deliver exceptional user experiences.`,\n  \n  \"ux-designer\":\n    `Our team is looking for a UX Designer who can create intuitive and engaging user experiences. The ideal candidate has 3+ years of experience in user-centered design, proficiency with design tools (Figma, Sketch), and experience conducting user research. You'll be responsible for creating wireframes, prototypes, and high-fidelity designs while collaborating with product and engineering teams.`\n};\n\nexport default function JobDescriptionInput({ value, onChange, error }) {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const { toast } = useToast();\n  \n  const generateJobDescription = (template) => {\n    setIsGenerating(true);\n    \n    // Simulate API call delay\n    setTimeout(() => {\n      onChange(jobTemplates[template]);\n      setIsGenerating(false);\n      \n      toast({\n        title: \"Job description generated\",\n        description: \"You can now edit the generated description or continue to the next step.\",\n      });\n    }, 1000);\n  };\n  \n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between items-center\">\n        <FormLabel>Job Description</FormLabel>\n        <div className=\"relative\">\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-primary text-sm font-medium flex items-center\"\n            onClick={() => document.getElementById('template-dropdown').classList.toggle('hidden')}\n          >\n            <Wand2 className=\"h-4 w-4 mr-1\" />\n            Generate with AI\n          </Button>\n          \n          <div \n            id=\"template-dropdown\"\n            className=\"absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10 hidden\"\n          >\n            <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\">\n              <button \n                className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\n                onClick={() => generateJobDescription('frontend-developer')}\n                disabled={isGenerating}\n              >\n                Frontend Developer\n              </button>\n              <button \n                className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\n                onClick={() => generateJobDescription('backend-developer')}\n                disabled={isGenerating}\n              >\n                Backend Developer\n              </button>\n              <button \n                className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\n                onClick={() => generateJobDescription('data-scientist')}\n                disabled={isGenerating}\n              >\n                Data Scientist\n              </button>\n              <button \n                className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\n                onClick={() => generateJobDescription('product-manager')}\n                disabled={isGenerating}\n              >\n                Product Manager\n              </button>\n              <button \n                className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left\"\n                onClick={() => generateJobDescription('ux-designer')}\n                disabled={isGenerating}\n              >\n                UX Designer\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <Textarea\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        rows={5}\n        placeholder=\"Enter detailed job description or generate one with AI...\"\n        className={error ? 'border-destructive' : ''}\n      />\n      \n      {isGenerating && (\n        <div className=\"text-sm text-muted-foreground animate-pulse\">\n          Generating job description...\n        </div>\n      )}\n    </div>\n  );\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","export const dummyData = {\n    \"job_description\": \"We're looking for a talented Frontend Developer who is passionate about building intuitive user inte\",\n    \"resumes_received\": 2,\n    \"files\": [\n        \"__MACOSX\",\n        \"Arjun_K_cv11978805_file.pdf\"\n    ],\n    \"candidates\": [\n        {\n            \"name\": \"Arjun_K_cv11978805_file\",\n            \"evaluation\": {\n                \"clarity_and_structure\": {\n                    \"score\": 9,\n                    \"analysis\": \"Clarity and structure evaluated with a score of 9.\"\n                },\n                \"relevant_experience\": {\n                    \"score\": 6,\n                    \"analysis\": \"Relevant experience evaluated with a score of 6.\"\n                },\n                \"achievements\": {\n                    \"score\": 9,\n                    \"analysis\": \"Achievements evaluated with a score of 9.\"\n                },\n                \"skills_match\": {\n                    \"score\": 9,\n                    \"analysis\": \"Skills match evaluated with a score of 9.\"\n                },\n                \"professionalism\": {\n                    \"score\": 9,\n                    \"analysis\": \"Professionalism evaluated with a score of 9.\"\n                },\n                \"overall\": {\n                    \"score\": 10,\n                    \"analysis\": \"Overall, a good-quality resume with relevant strengths.\",\n                    \"ranking\": 2\n                }\n            }\n        }\n    ]\n}","import React, { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface ContextType {\n    analysisResults: string;\n    setAnalysisResults: (newValue: string) => void;\n}\n\nconst MyContext = createContext<ContextType | undefined>(undefined);\n\nexport const MyContextProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [analysisResults,setAnalysisResults] = useState<string>('');\n\n    return (\n        <MyContext.Provider value={{ analysisResults,setAnalysisResults }}>\n            {children}\n        </MyContext.Provider>\n    );\n};\n\nexport const useMyContext = (): ContextType => {\n    const context = useContext(MyContext);\n    if (!context) {\n        throw new Error('useMyContext must be used within a MyContextProvider');\n    }\n    return context;\n};","import { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useMutation } from '@tanstack/react-query';\nimport { useLocation } from 'wouter';\n\nimport PageContainer from '@/components/layout/page-container';\nimport ResumeDropzone from '@/components/resume-analyzer/resume-dropzone';\nimport JobDescriptionInput from '@/components/resume-analyzer/job-description-input';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { dummyData } from '../lib/dummy';\nimport {useMyContext} from '../hooks/use-context'\n\n// Form schema based on the analysis requirements\nconst analysisFormSchema = z.object({\n  name: z.string().min(3, \"Analysis name must be at least 3 characters\"),\n  jobTitle: z.string().min(3, \"Job title must be at least 3 characters\"),\n  department: z.string().optional(),\n  jobDescription: z.string().min(20, \"Job description must be at least 20 characters\"),\n  filters: z.object({\n    experience: z.string().optional(),\n    location: z.string().optional(),\n    skills: z.string().optional(),\n    education: z.string().optional(),\n    industry: z.string().optional(),\n    languages: z.string().optional(),\n    prioritySkills: z.string().optional(),\n    priorityExperience: z.string().optional(),\n    priorityEducation: z.string().optional(),\n  }).optional(),\n});\n\nexport default function ResumeAnalyzerPage() {\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [location, navigate] = useLocation();\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isReanalysis, setIsReanalysis] = useState(false);\n  const [originalAnalysis, setOriginalAnalysis] = useState(null);\n  const { toast } = useToast();\n  const {analysisResults,setAnalysisResults} = useMyContext();\n\n  // Check if this is a reanalysis by extracting the ID from URL params\n  useEffect(() => {\n    const params = new URLSearchParams(location.split('?')[1]);\n    const reanalysisId = params.get('reanalysis');\n\n    if (reanalysisId) {\n      // Get analyses from sessionStorage\n      const analyses = JSON.parse(sessionStorage.getItem('analyses') || '[]');\n      const analysis = analyses.find(a => a.id === parseInt(reanalysisId));\n\n      if (analysis) {\n        setIsReanalysis(true);\n        setOriginalAnalysis(analysis);\n\n        // Prefill form with original analysis data\n        form.reset({\n          name: `${analysis.name} (Reanalysis)`,\n          jobTitle: analysis.jobTitle,\n          department: analysis.department,\n          jobDescription: analysis.jobDescription,\n          filters: analysis.filters || {\n            experience: '',\n            location: '',\n            skills: '',\n            education: '',\n            industry: '',\n            languages: '',\n            prioritySkills: 'regular',\n            priorityExperience: 'regular',\n            priorityEducation: 'regular',\n          }\n        });\n      }\n    }\n  }, [location]);\n\n  // Initialize form\n  const form = useForm({\n    resolver: zodResolver(analysisFormSchema),\n    defaultValues: {\n      name: '',\n      jobTitle: '',\n      department: '',\n      jobDescription: '',\n      filters: {\n        experience: '',\n        location: '',\n        skills: '',\n        education: '',\n        industry: '',\n        languages: '',\n        prioritySkills: 'regular',\n        priorityExperience: 'regular',\n        priorityEducation: 'regular',\n      },\n    },\n  });\n\n  // Create analysis mutation - modified to work without backend\n  const createAnalysisMutation = useMutation({\n    mutationFn: async (data) => {\n      // Simulate API call with 1 second delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Generate a random ID for the analysis\n      const analysisId = Math.floor(Math.random() * 10000) + 1;\n\n      // Create a mock analysis object\n      const analysis = {\n        id: analysisId,\n        ...data,\n        createdById: 1,\n        status: 'processing',\n        candidateCount: uploadedFiles.length,\n        averageScore: 0,\n        createdAt: new Date().toISOString()\n      };\n\n      // Store in sessionStorage to persist through page navigation\n      const analyses = JSON.parse(sessionStorage.getItem('analyses') || '[]');\n      analyses.push(analysis);\n      sessionStorage.setItem('analyses', JSON.stringify(analyses));\n\n      // Generate notifications\n      const notification = {\n        id: Math.floor(Math.random() * 10000) + 1,\n        userId: 1,\n        title: 'Analysis Started',\n        message: `Your analysis \"${data.name}\" is now processing.`,\n        type: 'info',\n        isRead: false,\n        createdAt: new Date().toISOString(),\n        relatedId: analysisId,\n        relatedType: 'analysis'\n      };\n\n      const notifications = JSON.parse(sessionStorage.getItem('notifications') || '[]');\n      notifications.push(notification);\n      sessionStorage.setItem('notifications', JSON.stringify(notifications));\n\n      return analysis;\n    },\n    onSuccess: (data) => {\n      toast({\n        title: 'Analysis created',\n        description: 'Your resume analysis has been started',\n      });\n\n      // Simulate starting the analysis process\n      simulateAnalysisProgress(data.id);\n\n      // Navigate to the results page directly for testing\n      setTimeout(() => {\n        navigate('/results');\n      }, 1000);\n    },\n    onError: (error) => {\n      toast({\n        title: 'Error',\n        description: error.message || 'There was an error creating your analysis',\n        variant: 'destructive',\n      });\n    },\n  });\n\n  // Mock function to simulate the analysis progress with tiered results\n  const simulateAnalysisProgress = async (analysisId) => {\n    try {\n      // Generate mock candidates based on uploaded files\n      if (uploadedFiles.length > 0) {\n        // Create a range of scores to simulate a realistic distribution\n        const generateTieredScore = (index, total) => {\n          // Top 10% get exceptional scores (90-98)\n          if (index < total * 0.1) {\n            return Math.floor(Math.random() * 8) + 90;\n          }\n          // Next 20% get strong scores (80-89)\n          else if (index < total * 0.3) {\n            return Math.floor(Math.random() * 9) + 80;\n          }\n          // Middle 30% get average scores (70-79)\n          else if (index < total * 0.6) {\n            return Math.floor(Math.random() * 9) + 70;\n          }\n          // Next 30% get below average scores (60-69)\n          else if (index < total * 0.9) {\n            return Math.floor(Math.random() * 9) + 60;\n          }\n          // Bottom 10% get poor scores (50-59)\n          else {\n            return Math.floor(Math.random() * 9) + 50;\n          }\n        };\n\n        // Shuffle the files to randomize who gets what tier\n        const shuffledFiles = [...uploadedFiles].sort(() => Math.random() - 0.5);\n\n        const mockCandidates = shuffledFiles.map((file, index) => {\n          // Calculate the score based on position in the array\n          const matchScore = generateTieredScore(index, uploadedFiles.length);\n\n          // Determine tier based on score\n          let tier;\n          if (matchScore >= 90) tier = 'exceptional';\n          else if (matchScore >= 80) tier = 'strong';\n          else if (matchScore >= 70) tier = 'qualified';\n          else if (matchScore >= 60) tier = 'potential';\n          else tier = 'notRecommended';\n\n          return {\n            id: Math.floor(Math.random() * 10000) + index + 1,\n            analysisId,\n            name: file.name.split('.')[0].replace(/_/g, ' '),\n            email: `${file.name.split('.')[0].toLowerCase().replace(/_/g, '.')}@example.com`,\n            phone: `+1 (555) ${String(Math.floor(Math.random() * 900) + 100)}-${String(Math.floor(Math.random() * 9000) + 1000)}`,\n            location: ['San Francisco, CA', 'New York, NY', 'Seattle, WA', 'Austin, TX'][Math.floor(Math.random() * 4)],\n            experience: `${Math.floor(Math.random() * 8) + 1}.${Math.floor(Math.random() * 9)} years`,\n            education: ['Bachelor', 'Master', 'PhD'][Math.floor(Math.random() * 3)],\n            skills: ['JavaScript', 'React', 'Node.js', 'Python', 'SQL', 'Cloud'].slice(0, Math.floor(Math.random() * 4) + 2),\n            matchScore,\n            tier,\n            resumeText: 'Resume content would be here in a real application',\n            createdAt: new Date().toISOString()\n          };\n        });\n\n        // Store candidates in sessionStorage\n        const candidates = JSON.parse(sessionStorage.getItem('candidates') || '[]');\n        sessionStorage.setItem('candidates', JSON.stringify([...candidates, ...mockCandidates]));\n\n        // Update analysis status to completed after 2 seconds\n        setTimeout(() => {\n          const analyses = JSON.parse(sessionStorage.getItem('analyses') || '[]');\n          const updatedAnalyses = analyses.map(a => {\n            if (a.id === analysisId) {\n              // Calculate average score\n              const avgScore = Math.round(mockCandidates.reduce((acc, c) => acc + c.matchScore, 0) / mockCandidates.length);\n              return { ...a, status: 'completed', averageScore: avgScore };\n            }\n            return a;\n          });\n          sessionStorage.setItem('analyses', JSON.stringify(updatedAnalyses));\n\n          // Add completion notification\n          const notifications = JSON.parse(sessionStorage.getItem('notifications') || '[]');\n          const completionNotification = {\n            id: Math.floor(Math.random() * 10000) + 100,\n            userId: 1,\n            title: 'Analysis Complete',\n            message: `Your analysis with ${mockCandidates.length} candidate(s) is now ready to view.`,\n            type: 'success',\n            isRead: false,\n            createdAt: new Date().toISOString(),\n            relatedId: analysisId,\n            relatedType: 'analysis'\n          };\n          notifications.push(completionNotification);\n          sessionStorage.setItem('notifications', JSON.stringify(notifications));\n\n          // Force refresh to show the notification\n          queryClient.invalidateQueries();\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error simulating analysis progress:', error);\n    }\n  };\n\n  // Handle form submission\n  const onSubmit = async (data) => {\n    if (uploadedFiles.length === 0) {\n      toast({\n        title: 'Missing resumes',\n        description: 'Please upload at least one resume to analyze',\n        variant: 'destructive',\n      });\n      return;\n    }\n    try {\n      console.log('Data', data, uploadedFiles)\n      const formData = new FormData();\n      formData.append('job_description', data?.jobDescription);\n      formData.append('resumes_zip_file', uploadedFiles?.[0]);\n\n      const url='http://127.0.0.1:8000/api/';\n      // const url = 'https://rayappan.pythonanywhere.com/api/'\n\n      const res = await fetch(`${url}`, {\n        method: 'POST',\n        body: formData,\n        // Headers are not needed when using FormData - \n        // the browser will automatically set the correct Content-Type with boundary\n      });\n      const _res = dummyData;\n      const response = await res.json();\n      console.log('Res',response)\n      setAnalysisResults(response);\n      if (response) {\n        navigate('/results');\n      }\n    } catch (e) {\n      console.log(e)\n    }\n\n    // createAnalysisMutation.mutate(data);\n  };\n\n\n  return (\n    <PageContainer title=\"Resume Analyzer\">\n      <Card>\n        <CardHeader className=\"px-6 py-5 border-b border-gray-100\">\n          <CardTitle className=\"font-display font-semibold text-lg text-text\">New Analysis</CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n              {/* Step 1: Analysis Info */}\n              <div className=\"space-y-4\">\n                <h3 className=\"font-display font-medium text-md text-text\">1. Analysis Information</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Analysis Name</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g. Senior Developer Hiring Q2 2023\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"jobTitle\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Job Title</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g. Senior Frontend Developer\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"department\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Department (Optional)</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g. Engineering, Marketing, HR\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              {/* Step 2: Job Description */}\n              <div className=\"space-y-4\">\n                <h3 className=\"font-display font-medium text-md text-text\">2. Job Description</h3>\n                <FormField\n                  control={form.control}\n                  name=\"jobDescription\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <JobDescriptionInput\n                        value={field.value}\n                        onChange={field.onChange}\n                        error={form.formState.errors.jobDescription}\n                      />\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              {/* Step 3: Upload Resumes */}\n              <div className=\"space-y-4\">\n                <h3 className=\"font-display font-medium text-md text-text\">\n                  3. Upload Resumes\n                  {isReanalysis && originalAnalysis && (\n                    <span className=\"ml-2 text-sm font-normal text-gray-500\">\n                      (Original analysis had {originalAnalysis.candidateCount} resumes)\n                    </span>\n                  )}\n                </h3>\n                <ResumeDropzone\n                  files={uploadedFiles}\n                  setFiles={setUploadedFiles}\n                  onUploadProgress={setUploadProgress}\n                />\n\n                {/* Analysis info for large batch uploads */}\n                {uploadedFiles.length > 25 && (\n                  <div className=\"bg-blue-50 border border-blue-100 rounded-md p-3 text-sm text-blue-700 mt-2\">\n                    <div className=\"flex items-start\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 mt-0.5 text-blue-500\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n                      </svg>\n                      <div>\n                        <p className=\"font-medium mb-1\">Large batch processing</p>\n                        <p>You've uploaded {uploadedFiles.length} resumes. Large batches will be processed in smaller groups with progress tracking.</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Step 4: Filtering Criteria */}\n              <div className=\"space-y-4\">\n                <h3 className=\"font-display font-medium text-md text-text\">4. Filter Criteria (Optional)</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"filters.experience\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Experience Level</FormLabel>\n                        <Select\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                        >\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Any Experience\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"any\">Any Experience</SelectItem>\n                            <SelectItem value=\"0-1\">0-1 years</SelectItem>\n                            <SelectItem value=\"1-3\">1-3 years</SelectItem>\n                            <SelectItem value=\"3-5\">3-5 years</SelectItem>\n                            <SelectItem value=\"5-7\">5-7 years</SelectItem>\n                            <SelectItem value=\"7+\">7+ years</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"filters.location\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Location</FormLabel>\n                        <Select\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                        >\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Any Location\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"any\">Any Location</SelectItem>\n                            <SelectItem value=\"remote\">Remote</SelectItem>\n                            <SelectItem value=\"usa\">United States</SelectItem>\n                            <SelectItem value=\"europe\">Europe</SelectItem>\n                            <SelectItem value=\"asia\">Asia</SelectItem>\n                            <SelectItem value=\"other\">Other</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"filters.skills\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Key Skills</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g. React, JavaScript, Node.js\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                {/* Advanced Filters */}\n                <div>\n                  <Button\n                    type=\"button\"\n                    variant=\"link\"\n                    className=\"text-primary text-sm p-0 h-auto\"\n                    onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n                  >\n                    {showAdvancedFilters ? '- Hide' : '+ Show'} Advanced Filters\n                  </Button>\n\n                  {showAdvancedFilters && (\n                    <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"filters.education\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Education Level</FormLabel>\n                            <Select\n                              onValueChange={field.onChange}\n                              defaultValue={field.value}\n                            >\n                              <FormControl>\n                                <SelectTrigger>\n                                  <SelectValue placeholder=\"Any Education\" />\n                                </SelectTrigger>\n                              </FormControl>\n                              <SelectContent>\n                                <SelectItem value=\"any\">Any Education</SelectItem>\n                                <SelectItem value=\"high-school\">High School</SelectItem>\n                                <SelectItem value=\"associate\">Associate Degree</SelectItem>\n                                <SelectItem value=\"bachelor\">Bachelor's Degree</SelectItem>\n                                <SelectItem value=\"master\">Master's Degree</SelectItem>\n                                <SelectItem value=\"phd\">PhD</SelectItem>\n                              </SelectContent>\n                            </Select>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"filters.industry\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Industry</FormLabel>\n                            <Select\n                              onValueChange={field.onChange}\n                              defaultValue={field.value}\n                            >\n                              <FormControl>\n                                <SelectTrigger>\n                                  <SelectValue placeholder=\"Any Industry\" />\n                                </SelectTrigger>\n                              </FormControl>\n                              <SelectContent>\n                                <SelectItem value=\"any\">Any Industry</SelectItem>\n                                <SelectItem value=\"tech\">Technology</SelectItem>\n                                <SelectItem value=\"finance\">Finance</SelectItem>\n                                <SelectItem value=\"healthcare\">Healthcare</SelectItem>\n                                <SelectItem value=\"education\">Education</SelectItem>\n                                <SelectItem value=\"retail\">Retail</SelectItem>\n                              </SelectContent>\n                            </Select>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"filters.languages\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Languages</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"e.g. English, Spanish, French\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n                  )}\n                </div>\n\n                {/* Priority Settings */}\n                <div className=\"mt-8 border-t pt-4\">\n                  <h4 className=\"text-md font-medium text-text mb-4\">Priority Settings</h4>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    Set priority weights for different criteria to better rank candidates.\n                    Higher priority items will have more impact on the candidate scoring.\n                  </p>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"filters.prioritySkills\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Skills Priority</FormLabel>\n                          <Select\n                            onValueChange={field.onChange}\n                            defaultValue={field.value}\n                          >\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Regular Priority\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"regular\">Regular Priority</SelectItem>\n                              <SelectItem value=\"low\">Low Priority</SelectItem>\n                              <SelectItem value=\"medium\">Medium Priority</SelectItem>\n                              <SelectItem value=\"high\">High Priority</SelectItem>\n                              <SelectItem value=\"critical\">Critical Priority</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"filters.priorityExperience\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Experience Priority</FormLabel>\n                          <Select\n                            onValueChange={field.onChange}\n                            defaultValue={field.value}\n                          >\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Regular Priority\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"regular\">Regular Priority</SelectItem>\n                              <SelectItem value=\"low\">Low Priority</SelectItem>\n                              <SelectItem value=\"medium\">Medium Priority</SelectItem>\n                              <SelectItem value=\"high\">High Priority</SelectItem>\n                              <SelectItem value=\"critical\">Critical Priority</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"filters.priorityEducation\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Education Priority</FormLabel>\n                          <Select\n                            onValueChange={field.onChange}\n                            defaultValue={field.value}\n                          >\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Regular Priority\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"regular\">Regular Priority</SelectItem>\n                              <SelectItem value=\"low\">Low Priority</SelectItem>\n                              <SelectItem value=\"medium\">Medium Priority</SelectItem>\n                              <SelectItem value=\"high\">High Priority</SelectItem>\n                              <SelectItem value=\"critical\">Critical Priority</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end pt-5 border-t border-gray-200\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => form.reset()}\n                  className=\"mr-4\"\n                >\n                  Reset\n                </Button>\n                <Button\n                  type=\"submit\"\n                  disabled={createAnalysisMutation.isPending}\n                >\n                  {createAnalysisMutation.isPending ? 'Starting Analysis...' : 'Start Analysis'}\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </PageContainer>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { Link } from 'wouter';\nimport { RefreshCw } from 'lucide-react';\n\nimport PageContainer from '@/components/layout/page-container';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default function AnalysisQueuePage() {\n  const { toast } = useToast();\n  \n  // Mock fetch analyses from sessionStorage\n  const { data: analyses = [], refetch } = useQuery({\n    queryKey: ['/api/analyses'],\n    queryFn: () => {\n      // Get analyses from sessionStorage\n      const storedAnalyses = JSON.parse(sessionStorage.getItem('analyses') || '[]');\n      return storedAnalyses;\n    }\n  });\n  \n  // Mock fetch notifications from sessionStorage\n  const { data: notifications = [] } = useQuery({\n    queryKey: ['/api/notifications'],\n    queryFn: () => {\n      // Get notifications from sessionStorage\n      const storedNotifications = JSON.parse(sessionStorage.getItem('notifications') || '[]');\n      return storedNotifications;\n    }\n  });\n  \n  // Filter analyses that are in progress\n  const queuedAnalyses = analyses.filter(a => \n    a.status === 'queued' || a.status === 'processing'\n  );\n  \n  // Handle refresh click\n  const handleRefresh = () => {\n    refetch();\n    toast({\n      title: 'Refreshed',\n      description: 'The queue has been refreshed',\n    });\n  };\n  \n  // Handle cancel analysis - updated to work with sessionStorage\n  const handleCancel = async (analysisId) => {\n    try {\n      // Get analyses from sessionStorage\n      const analyses = JSON.parse(sessionStorage.getItem('analyses') || '[]');\n      \n      // Update the status of the specified analysis\n      const updatedAnalyses = analyses.map(analysis => {\n        if (analysis.id === analysisId) {\n          return { ...analysis, status: 'failed' };\n        }\n        return analysis;\n      });\n      \n      // Save the updated analyses back to sessionStorage\n      sessionStorage.setItem('analyses', JSON.stringify(updatedAnalyses));\n      \n      // Create a notification for the cancelled analysis\n      const notifications = JSON.parse(sessionStorage.getItem('notifications') || '[]');\n      const cancelNotification = {\n        id: Math.floor(Math.random() * 10000) + 200,\n        userId: 1,\n        title: 'Analysis Cancelled',\n        message: 'Your analysis has been cancelled.',\n        type: 'error',\n        isRead: false,\n        createdAt: new Date().toISOString(),\n        relatedId: analysisId,\n        relatedType: 'analysis'\n      };\n      notifications.push(cancelNotification);\n      sessionStorage.setItem('notifications', JSON.stringify(notifications));\n      \n      // Invalidate queries to refresh UI\n      queryClient.invalidateQueries();\n      \n      toast({\n        title: 'Analysis cancelled',\n        description: 'The analysis has been cancelled',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to cancel analysis',\n        variant: 'destructive',\n      });\n    }\n  };\n  \n  // Helper to get progress percentage\n  const getProgressPercentage = (analysis) => {\n    if (analysis.status === 'queued') return 0;\n    if (analysis.status === 'completed') return 100;\n    \n    // For processing status, generate a random percentage between 15-90%\n    return Math.floor(Math.random() * 75) + 15;\n  };\n  \n  // Get estimated time\n  const getEstimatedTime = (analysis) => {\n    if (analysis.status === 'queued') return 'Waiting in queue';\n    \n    const progress = getProgressPercentage(analysis);\n    const remainingMinutes = Math.floor((100 - progress) / 100 * 60);\n    return `Estimated: ${remainingMinutes}min`;\n  };\n  \n  return (\n    <PageContainer title=\"Analysis Queue\">\n      <div className=\"space-y-6\">\n        {/* Current Queue */}\n        <Card>\n          <CardHeader className=\"px-6 py-5 border-b border-gray-100\">\n            <div className=\"flex justify-between items-center\">\n              <CardTitle className=\"font-display font-semibold text-lg text-text\">Current Queue</CardTitle>\n              <Button onClick={handleRefresh} variant=\"outline\" size=\"sm\">\n                <RefreshCw className=\"h-4 w-4 mr-2\" />\n                Refresh\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            {queuedAnalyses.length === 0 ? (\n              <div className=\"py-8 text-center\">\n                <p className=\"text-gray-500 mb-4\">No analyses in the queue</p>\n                <Link href=\"/resume-analyzer\">\n                  <Button>Start New Analysis</Button>\n                </Link>\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Analysis Name</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Candidates</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Progress</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {queuedAnalyses.map(analysis => {\n                      const progress = getProgressPercentage(analysis);\n                      \n                      return (\n                        <tr key={analysis.id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-4 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm font-medium text-text\">{analysis.jobTitle}</div>\n                            <div className=\"text-xs text-gray-500\">{analysis.department || analysis.name}</div>\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900\">{analysis.candidateCount}</div>\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-500\">\n                              {analysis.createdAt \n                                ? formatDistanceToNow(new Date(analysis.createdAt), { addSuffix: true })\n                                : 'Recently'}\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap\">\n                            <Badge variant={analysis.status === 'queued' ? 'secondary' : 'default'}>\n                              {analysis.status === 'queued' ? 'Queued' : 'Processing'}\n                            </Badge>\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap w-48\">\n                            <div className=\"w-full\">\n                              <Progress value={progress} className=\"h-2\" />\n                            </div>\n                            <div className=\"text-xs text-gray-500 mt-1\">\n                              {progress}% - {getEstimatedTime(analysis)}\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <Link href={`/results/${analysis.id}`}>\n                              <Button variant=\"link\" className=\"text-primary\">Details</Button>\n                            </Link>\n                            <Button \n                              variant=\"link\" \n                              className=\"text-red-500\"\n                              onClick={() => handleCancel(analysis.id)}\n                            >\n                              Cancel\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n        \n        {/* Notifications Card */}\n        <Card>\n          <CardHeader className=\"px-6 py-5 border-b border-gray-100\">\n            <div className=\"flex justify-between items-center\">\n              <CardTitle className=\"font-display font-semibold text-lg text-text\">Notifications</CardTitle>\n              <Button\n                variant=\"link\"\n                className=\"text-primary text-sm p-0 h-auto\"\n                onClick={() => {\n                  // Get notifications from sessionStorage\n                  const notifications = JSON.parse(sessionStorage.getItem('notifications') || '[]');\n                  \n                  // Mark all as read\n                  const updatedNotifications = notifications.map(notification => ({\n                    ...notification,\n                    isRead: true\n                  }));\n                  \n                  // Save back to sessionStorage\n                  sessionStorage.setItem('notifications', JSON.stringify(updatedNotifications));\n                  \n                  // Refresh UI\n                  queryClient.invalidateQueries();\n                  \n                  toast({\n                    title: 'Notifications updated',\n                    description: 'All notifications marked as read'\n                  });\n                }}\n              >\n                Mark all as read\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            <div className=\"divide-y divide-gray-100\">\n              {notifications.length === 0 ? (\n                <div className=\"py-8 text-center\">\n                  <p className=\"text-gray-500\">No notifications</p>\n                </div>\n              ) : (\n                notifications.map(notification => (\n                  <div key={notification.id} className=\"p-6 hover:bg-gray-50\">\n                    <div className=\"flex\">\n                      <div className=\"flex-shrink-0 mr-4\">\n                        <div className={`h-10 w-10 rounded-full flex items-center justify-center ${getNotificationTypeStyles(notification.type).bgColor}`}>\n                          <span className={`text-lg ${getNotificationTypeStyles(notification.type).textColor}`}>\n                            {getNotificationTypeIcon(notification.type)}\n                          </span>\n                        </div>\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium text-text\">{notification.title}</p>\n                        <p className=\"text-sm text-gray-500 mt-1\">{notification.message}</p>\n                        \n                        {notification.relatedId && notification.relatedType === 'analysis' && (\n                          <div className=\"mt-2\">\n                            <Link href={`/results/${notification.relatedId}`}>\n                              <Button variant=\"link\" className=\"text-sm text-primary p-0 h-auto\">View Results</Button>\n                            </Link>\n                          </div>\n                        )}\n                        \n                        <p className=\"text-xs text-gray-400 mt-2\">\n                          {formatDistanceToNow(new Date(notification.createdAt), { addSuffix: true })}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </PageContainer>\n  );\n}\n\n// Helper functions for notification styling\nfunction getNotificationTypeStyles(type) {\n  switch (type) {\n    case 'success':\n      return { bgColor: 'bg-green-100', textColor: 'text-green-600' };\n    case 'warning':\n      return { bgColor: 'bg-yellow-100', textColor: 'text-yellow-600' };\n    case 'error':\n      return { bgColor: 'bg-red-100', textColor: 'text-red-600' };\n    case 'info':\n    default:\n      return { bgColor: 'bg-blue-100', textColor: 'text-blue-600' };\n  }\n}\n\nfunction getNotificationTypeIcon(type) {\n  switch (type) {\n    case 'success':\n      return '✓';\n    case 'warning':\n      return '⚠';\n    case 'error':\n      return '✖';\n    case 'info':\n    default:\n      return 'ℹ';\n  }\n}\n","import { Award, BarChart2, Calendar, Wrench } from 'lucide-react';\n\nexport default function AnalyticsOverview({ candidates, loading }) {\n  // Calculate analytics metrics\n  const calculateMetrics = () => {\n    if (!candidates || candidates.length === 0) {\n      return {\n        averageScore: 0,\n        top10Score: 0,\n        averageExperience: 0,\n        skillsCoverage: 0,\n        top10Count: 0\n      };\n    }\n    \n    // Sort candidates by score\n    const sortedCandidates = [...candidates].sort((a, b) => b.matchScore - a.matchScore);\n    \n    // Calculate average score\n    const totalScore = candidates.reduce((sum, candidate) => sum + candidate.matchScore, 0);\n    const averageScore = totalScore / candidates.length;\n    \n    // Calculate top 10% score\n    const top10Percent = Math.max(1, Math.floor(candidates.length * 0.1));\n    const top10Candidates = sortedCandidates.slice(0, top10Percent);\n    const top10TotalScore = top10Candidates.reduce((sum, candidate) => sum + candidate.matchScore, 0);\n    const top10Score = top10TotalScore / top10Percent;\n    \n    // Count candidates with score above 90\n    const above90Count = candidates.filter(candidate => candidate.matchScore >= 90).length;\n    \n    // Calculate average experience (assuming experience is a string like \"4.5 years\")\n    // Parse experience values that match pattern: \"X.Y years\" or \"X years\"\n    const experienceValues = candidates\n      .map(candidate => {\n        const match = candidate.experience?.match(/(\\d+\\.?\\d*)/);\n        return match ? parseFloat(match[1]) : null;\n      })\n      .filter(value => value !== null);\n    \n    const totalExperience = experienceValues.reduce((sum, value) => sum + value, 0);\n    const averageExperience = experienceValues.length > 0 ? totalExperience / experienceValues.length : 0;\n    \n    // Calculate skills coverage (assume skills is an array)\n    const skillsCount = candidates.reduce((sum, candidate) => {\n      return sum + (Array.isArray(candidate.skills) ? candidate.skills.length : 0);\n    }, 0);\n    \n    const skillsCoverage = candidates.length > 0 ? (skillsCount / candidates.length) / 15 * 100 : 0; // Normalize to percentage\n    \n    return {\n      averageScore: averageScore.toFixed(1),\n      top10Score: top10Score.toFixed(1),\n      averageExperience: averageExperience.toFixed(1),\n      skillsCoverage: skillsCoverage.toFixed(1),\n      top10Count: above90Count\n    };\n  };\n  \n  const metrics = calculateMetrics();\n  \n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      {/* Average Match Score */}\n      <div className=\"bg-white p-6 rounded-lg shadow-card\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Average Match Score</h3>\n          <div className=\"p-1 rounded-md bg-primary bg-opacity-10\">\n            <Award className=\"h-5 w-5 text-primary\" />\n          </div>\n        </div>\n        <p className=\"text-3xl font-semibold text-text mt-2\">\n          {loading ? '...' : `${metrics.averageScore}%`}\n        </p>\n        <div className=\"mt-2 flex items-center text-sm\">\n          <span className=\"text-secondary font-medium\">↑ 4.2%</span>\n          <span className=\"text-gray-500 ml-1\">higher than average</span>\n        </div>\n      </div>\n      \n      {/* Top 10% Score */}\n      <div className=\"bg-white p-6 rounded-lg shadow-card\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Top 10% Score</h3>\n          <div className=\"p-1 rounded-md bg-secondary bg-opacity-10\">\n            <BarChart2 className=\"h-5 w-5 text-secondary\" />\n          </div>\n        </div>\n        <p className=\"text-3xl font-semibold text-text mt-2\">\n          {loading ? '...' : `${metrics.top10Score}%`}\n        </p>\n        <div className=\"mt-2 flex items-center text-sm\">\n          <span className=\"text-gray-500\">\n            {loading ? '...' : `${metrics.top10Count} candidates scored above 90%`}\n          </span>\n        </div>\n      </div>\n      \n      {/* Experience Level */}\n      <div className=\"bg-white p-6 rounded-lg shadow-card\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Experience Level</h3>\n          <div className=\"p-1 rounded-md bg-primary bg-opacity-10\">\n            <Calendar className=\"h-5 w-5 text-primary\" />\n          </div>\n        </div>\n        <p className=\"text-3xl font-semibold text-text mt-2\">\n          {loading ? '...' : `${metrics.averageExperience} yrs`}\n        </p>\n        <div className=\"mt-2 flex items-center text-sm\">\n          <span className=\"text-secondary font-medium\">+0.9 yrs</span>\n          <span className=\"text-gray-500 ml-1\">above requirement</span>\n        </div>\n      </div>\n      \n      {/* Skills Coverage */}\n      <div className=\"bg-white p-6 rounded-lg shadow-card\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Skills Coverage</h3>\n          <div className=\"p-1 rounded-md bg-secondary bg-opacity-10\">\n            <Wrench className=\"h-5 w-5 text-secondary\" />\n          </div>\n        </div>\n        <p className=\"text-3xl font-semibold text-text mt-2\">\n          {loading ? '...' : `${metrics.skillsCoverage}%`}\n        </p>\n        <div className=\"mt-2 flex items-center text-sm\">\n          <span className=\"text-gray-500\">\n            {loading ? '...' : 'Key skills matched on average'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { Search, Eye, Mail } from 'lucide-react';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function CandidatesTable({ candidates, loading, sortType }) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [candidatesPerPage] = useState(10);\n  const { toast } = useToast();\n  \n  // Filter candidates by search term\n  const filteredCandidates = candidates.filter(candidate => {\n    if (!searchTerm) return true;\n    \n    const searchLower = searchTerm.toLowerCase();\n    return (\n      candidate.name?.toLowerCase().includes(searchLower) ||\n      candidate.email?.toLowerCase().includes(searchLower) ||\n      candidate.location?.toLowerCase().includes(searchLower) ||\n      (Array.isArray(candidate.skills) && \n        candidate.skills.some(skill => skill.toLowerCase().includes(searchLower)))\n    );\n  });\n  \n  // Sort candidates based on sort type\n  const sortedCandidates = [...filteredCandidates].sort((a, b) => {\n    switch (sortType) {\n      case 'match':\n        return b.matchScore - a.matchScore;\n      case 'experience':\n        // Extract numbers from experience strings\n        const expA = parseFloat(a.experience?.match(/(\\d+\\.?\\d*)/)?.[1] || '0');\n        const expB = parseFloat(b.experience?.match(/(\\d+\\.?\\d*)/)?.[1] || '0');\n        return expB - expA;\n      case 'education':\n        const eduRank = { PhD: 3, Master: 2, Bachelor: 1 };\n        const rankA = eduRank[a.education] || 0;\n        const rankB = eduRank[b.education] || 0;\n        return rankB - rankA;\n      case 'name':\n        return a.name?.localeCompare(b.name || '');\n      default:\n        return b.matchScore - a.matchScore;\n    }\n  });\n  \n  // Pagination\n  const indexOfLastCandidate = currentPage * candidatesPerPage;\n  const indexOfFirstCandidate = indexOfLastCandidate - candidatesPerPage;\n  const currentCandidates = sortedCandidates.slice(indexOfFirstCandidate, indexOfLastCandidate);\n  const totalPages = Math.ceil(filteredCandidates.length / candidatesPerPage);\n  \n  // Handle contact button click\n  const handleContact = (candidate) => {\n    toast({\n      title: 'Contact initiated',\n      description: `An email has been sent to ${candidate.email}`,\n    });\n  };\n  \n  // Handle view details click\n  const handleViewDetails = (candidate) => {\n    toast({\n      title: 'Viewing candidate details',\n      description: `Details for ${candidate.name}`,\n    });\n  };\n  \n  // Get match score color\n  const getMatchScoreColor = (score) => {\n    if (score >= 90) return 'bg-green-100 text-green-800';\n    if (score >= 70) return 'bg-green-100 text-green-800';\n    if (score >= 50) return 'bg-yellow-100 text-yellow-800';\n    return 'bg-red-100 text-red-800';\n  };\n  \n  // Get match score label\n  const getMatchScoreLabel = (score) => {\n    if (score >= 90) return 'Excellent';\n    if (score >= 70) return 'Good';\n    if (score >= 50) return 'Average';\n    return 'Poor';\n  };\n  \n  return (\n    <Card>\n      <CardHeader className=\"px-6 py-5 border-b border-gray-100 flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <CardTitle className=\"font-display font-semibold text-lg text-text\">\n          Candidates ({filteredCandidates.length})\n        </CardTitle>\n        <div className=\"relative mt-2 sm:mt-0 w-full sm:w-64\">\n          <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <Input\n            placeholder=\"Search candidates...\"\n            className=\"pl-9\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </CardHeader>\n      <CardContent className=\"p-0\">\n        {loading ? (\n          <div className=\"py-12 text-center\">\n            <p className=\"text-gray-500\">Loading candidates...</p>\n          </div>\n        ) : filteredCandidates.length === 0 ? (\n          <div className=\"py-12 text-center\">\n            <p className=\"text-gray-500\">No candidates found</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr className=\"bg-gray-50\">\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contact</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Experience</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Location</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Match Score</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Skills</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-200\">\n                  {currentCandidates.map((candidate, index) => (\n                    <tr key={candidate.id || index} className=\"hover:bg-gray-50\">\n                      <td className=\"px-4 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"h-10 w-10 flex-shrink-0\">\n                            <Avatar>\n                              <AvatarImage \n                                src={`https://source.unsplash.com/random/100x100?face&${index}`} \n                                alt={candidate.name} \n                              />\n                              <AvatarFallback>{candidate.name?.[0] || 'C'}</AvatarFallback>\n                            </Avatar>\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-text\">{candidate.name}</div>\n                            <div className=\"text-sm text-gray-500\">\n                              {candidate.education || 'Unknown education'}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-text\">{candidate.email}</div>\n                        <div className=\"text-sm text-gray-500\">{candidate.phone || 'No phone provided'}</div>\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-text\">{candidate.experience || 'Unknown'}</div>\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-text\">{candidate.location || 'Unknown'}</div>\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap\">\n                        <div className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getMatchScoreColor(candidate?.evaluation?.overall?.score*100)}`}>\n                          <span className=\"font-bold mr-1\">{candidate?.evaluation?.overall?.score*10}%</span> \n                          {getMatchScoreLabel(candidate?.evaluation?.overall?.score*10)}\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-4\">\n                        <div className=\"flex flex-wrap gap-1\">\n                          {Array.isArray(candidate.skills) ? (\n                            <>\n                              {candidate.skills.slice(0, 3).map((skill, i) => (\n                                <Badge key={i} variant=\"secondary\" className=\"bg-blue-100 text-blue-800 hover:bg-blue-200\">\n                                  {skill}\n                                </Badge>\n                              ))}\n                              {candidate.skills.length > 3 && (\n                                <Badge variant=\"outline\" className=\"bg-gray-100 text-gray-800\">\n                                  +{candidate.skills.length - 3}\n                                </Badge>\n                              )}\n                            </>\n                          ) : (\n                            <span className=\"text-xs text-gray-500\">No skills listed</span>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\" \n                          className=\"text-primary mr-1\"\n                          onClick={() => handleViewDetails(candidate)}\n                        >\n                          <Eye className=\"h-4 w-4 mr-1\" />\n                          View\n                        </Button>\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\" \n                          className=\"text-green-600\"\n                          onClick={() => handleContact(candidate)}\n                        >\n                          <Mail className=\"h-4 w-4 mr-1\" />\n                          Contact\n                        </Button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            \n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"px-6 py-4 border-t border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"text-sm text-gray-500\">\n                    Showing <span className=\"font-medium\">{indexOfFirstCandidate + 1}</span> to{\" \"}\n                    <span className=\"font-medium\">\n                      {Math.min(indexOfLastCandidate, filteredCandidates.length)}\n                    </span>{\" \"}\n                    of <span className=\"font-medium\">{filteredCandidates.length}</span> candidates\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                      disabled={currentPage === 1}\n                    >\n                      Previous\n                    </Button>\n                    \n                    {Array.from({ length: Math.min(totalPages, 5) }).map((_, i) => {\n                      const pageNumber = i + 1;\n                      return (\n                        <Button\n                          key={i}\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className={currentPage === pageNumber ? \"bg-primary text-white\" : \"\"}\n                          onClick={() => setCurrentPage(pageNumber)}\n                        >\n                          {pageNumber}\n                        </Button>\n                      );\n                    })}\n                    \n                    {totalPages > 5 && (\n                      <>\n                        <Button variant=\"outline\" size=\"sm\" disabled>\n                          ...\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => setCurrentPage(totalPages)}\n                        >\n                          {totalPages}\n                        </Button>\n                      </>\n                    )}\n                    \n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                      disabled={currentPage === totalPages}\n                    >\n                      Next\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LabelList\n} from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n\nexport default function EvaluationCharts({ candidates, loading }) {\n  // Prepare average scores across all evaluation categories\n  const getCategoryAverages = () => {\n    if (!candidates?.length) return [];\n\n    const categories = [\n      'clarity_and_structure',\n      'relevant_experience',\n      'achievements',\n      'skills_match',\n      'professionalism'\n    ];\n\n    return categories.map(category => {\n      const total = candidates.reduce((sum, candidate) =>\n        sum + candidate.evaluation[category].score, 0);\n      const average = total / candidates.length;\n\n      return {\n        name: category.split('_').map(w => w[0].toUpperCase() + w.slice(1)).join(' '),\n        value: parseFloat(average.toFixed(1)),\n        analysis: candidates[0].evaluation[category].analysis\n      };\n    });\n  };\n\n  // Prepare overall score distribution\n  const getScoreDistribution = () => {\n    if (!candidates?.length) return [];\n\n    const scoreRanges = [\n      { name: 'Poor (0-5)', min: 0, max: 5, count: 0 },\n      { name: 'Average (6-7)', min: 6, max: 7, count: 0 },\n      { name: 'Good (8-9)', min: 8, max: 9, count: 0 },\n      { name: 'Excellent (10)', min: 10, max: 10, count: 0 }\n    ];\n\n    candidates.forEach(candidate => {\n      const score = candidate.evaluation.overall.score;\n      const range = scoreRanges.find(r => score >= r.min && score <= r.max);\n      if (range) range.count++;\n    });\n\n    return scoreRanges;\n  };\n\n  // Prepare top performing candidates\n  const getTopCandidates = () => {\n    if (!candidates?.length) return [];\n\n    return [...candidates]\n      .sort((a, b) => b.evaluation.overall.score - a.evaluation.overall.score)\n      .slice(0, 3)\n      .map(candidate => ({\n        name: candidate.name.split('_')[0], // Just first name\n        score: candidate.evaluation.overall.score,\n        ranking: candidate.evaluation.overall.ranking\n      }));\n  };\n\n  // Custom label for pie chart\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"white\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"central\"\n        fontSize={12}\n        fontWeight={500}\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  const categoryAverages = getCategoryAverages();\n  const scoreDistribution = getScoreDistribution();\n  const topCandidates = getTopCandidates();\n\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-3 border border-gray-200 rounded-md shadow-sm text-sm\">\n          <p className=\"font-medium\">{payload[0].name || payload[0].payload.name}</p>\n          <p>Score: {payload[0].value}{payload[0].payload.max ? `/${payload[0].payload.max}` : ''}</p>\n          {payload[0].payload.analysis && (\n            <p className=\"text-xs mt-1 text-gray-600\">{payload[0].payload.analysis}</p>\n          )}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {/* Fixed Category Averages Pie Chart */}\n      <Card className=\"h-80\">\n        <CardHeader className=\"px-4 py-3 border-b\">\n          <CardTitle className=\"text-sm font-medium\">Evaluation Category Averages</CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4 h-[calc(100%-52px)]\">\n          {loading ? (\n            <div className=\"h-full flex items-center justify-center\">\n              <p className=\"text-gray-500 text-sm\">Loading...</p>\n            </div>\n          ) : !categoryAverages.length ? (\n            <div className=\"h-full flex items-center justify-center\">\n              <div className=\"flex flex-col items-center text-gray-500 text-sm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"size-6\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z\" />\n                </svg>\n\n                <span>No data</span>\n              </div>\n\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart margin={{ top: 20, bottom: 20 }}>\n                <Pie\n                  data={categoryAverages}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={80}\n                  paddingAngle={2}\n                  dataKey=\"value\"\n                  label={renderCustomizedLabel}\n                  labelLine={false}\n                >\n                  {categoryAverages.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                  <LabelList\n                    dataKey=\"name\"\n                    position=\"outside\"\n                    offset={15}\n                    fontSize={10}\n                    fill=\"#333\"\n                    angle={0}\n                    stroke=\"none\"\n                  />\n                </Pie>\n                <Tooltip content={<CustomTooltip />} />\n                <Legend\n                  layout=\"horizontal\"\n                  verticalAlign=\"bottom\"\n                  height={36}\n                  wrapperStyle={{ fontSize: '10px', paddingTop: '10px' }}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Score Distribution */}\n      <Card className=\"h-80\">\n        <CardHeader className=\"px-4 py-3 border-b\">\n          <CardTitle className=\"text-sm font-medium\">Score Distribution</CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4 h-[calc(100%-52px)]\">\n          {loading ? (\n            <div className=\"h-full flex items-center justify-center\">\n              <p className=\"text-gray-500 text-sm\">Loading...</p>\n            </div>\n          ) : !scoreDistribution.length ? (\n            <div className=\"h-full flex items-center justify-center\">\n              <div className=\"flex flex-col items-center text-gray-500 text-sm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"size-6\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z\" />\n                </svg>\n\n                <span>No data</span>\n              </div>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={scoreDistribution} margin={{ left: -20 }}>\n                <XAxis dataKey=\"name\" tick={{ fontSize: 10 }} />\n                <YAxis tick={{ fontSize: 10 }} />\n                <Tooltip content={<CustomTooltip />} />\n                <Bar dataKey=\"count\" fill=\"#8884d8\" radius={[4, 4, 0, 0]}>\n                  {scoreDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Top Candidates */}\n      <Card className=\"h-80\">\n        <CardHeader className=\"px-4 py-3 border-b\">\n          <CardTitle className=\"text-sm font-medium\">Top Candidates</CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4 h-[calc(100%-52px)]\">\n          {loading ? (\n            <div className=\"h-full flex items-center justify-center\">\n              <p className=\"text-gray-500 text-sm\">Loading...</p>\n            </div>\n          ) : !topCandidates.length ? (\n            <div className=\"h-full flex items-center justify-center\">\n             <div className=\"flex flex-col items-center text-gray-500 text-sm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"size-6\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z\" />\n                </svg>\n\n                <span>No data</span>\n              </div>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={topCandidates}\n                layout=\"vertical\"\n                margin={{ left: 30, right: 20 }}\n              >\n                <XAxis type=\"number\" domain={[0, 10]} tick={{ fontSize: 10 }} />\n                <YAxis\n                  dataKey=\"name\"\n                  type=\"category\"\n                  width={80}\n                  tick={{ fontSize: 10 }}\n                />\n                <Tooltip\n                  content={<CustomTooltip />}\n                  formatter={(value) => [`Score: ${value}/10`, '']}\n                />\n                <Bar dataKey=\"score\" fill=\"#82CA9D\" radius={[0, 4, 4, 0]}>\n                  {topCandidates.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","import { User, Award, Star } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\n\nexport default function TopCandidates({ candidates }) {\n  // Take the top 5 candidates by match score\n  const topCandidates = [...candidates]\n    .sort((a, b) => b.matchScore - a.matchScore)\n    .slice(0, 5);\n  \n  // Helper function to get formatted skills\n  const getFormattedSkills = (skills) => {\n    if (typeof skills === 'string') {\n      return skills.split(',').map(s => s.trim());\n    }\n    return Array.isArray(skills) ? skills : [];\n  };\n  \n  // Helper function to get position badge\n  const getPositionBadge = (position) => {\n    if (position === 0) return <Badge className=\"bg-yellow-500\">#1</Badge>;\n    if (position === 1) return <Badge className=\"bg-gray-400\">#2</Badge>;\n    if (position === 2) return <Badge className=\"bg-amber-700\">#3</Badge>;\n    return <Badge variant=\"outline\">#{position + 1}</Badge>;\n  };\n  \n  return (\n    <Card>\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"text-lg font-medium flex items-center gap-2\">\n          <Award className=\"h-5 w-5 text-yellow-500\" />\n          Top Candidates\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {topCandidates.length === 0 ? (\n            <div className=\"text-center py-4 text-gray-500\">\n              No candidates found\n            </div>\n          ) : (\n            topCandidates.map((candidate, index) => (\n              <div \n                key={candidate.id}\n                className={`p-4 rounded-lg flex items-start gap-4 ${\n                  index === 0 ? 'bg-yellow-50 border border-yellow-100' : 'hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"flex-shrink-0\">\n                  <div className={`h-10 w-10 rounded-full flex items-center justify-center ${\n                    index === 0 ? 'bg-yellow-100 text-yellow-700' : 'bg-gray-100 text-gray-700'\n                  }`}>\n                    {index === 0 ? <Star className=\"h-5 w-5\" /> : <User className=\"h-5 w-5\" />}\n                  </div>\n                </div>\n                \n                <div className=\"flex-grow\">\n                  <div className=\"flex items-center gap-2\">\n                    <h3 className=\"font-medium\">{candidate.name}</h3>\n                    {getPositionBadge(index)}\n                    <div className=\"ml-auto\">\n                      <span className={`font-bold ${\n                        candidate.matchScore >= 90 ? 'text-green-600' :\n                        candidate.matchScore >= 80 ? 'text-blue-600' :\n                        'text-gray-700'\n                      }`}>\n                        {candidate.matchScore}%\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    {candidate.experience} • {candidate.education} • {candidate.location}\n                  </p>\n                  \n                  <div className=\"mt-2 flex flex-wrap gap-1\">\n                    {getFormattedSkills(candidate.skills).slice(0, 3).map((skill, i) => (\n                      <Badge key={i} variant=\"outline\" className=\"mr-1 mb-1\">\n                        {skill}\n                      </Badge>\n                    ))}\n                    {getFormattedSkills(candidate.skills).length > 3 && (\n                      <Badge variant=\"outline\" className=\"bg-gray-50\">\n                        +{getFormattedSkills(candidate.skills).length - 3}\n                      </Badge>\n                    )}\n                  </div>\n                  \n                  <div className=\"mt-3\">\n                    <Button variant=\"link\" size=\"sm\" className=\"h-auto p-0 text-primary\">\n                      View Resume\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import { useState, useEffect } from 'react';\nimport {\n  Star,\n  Trophy,\n  CheckCircle2,\n  CircleHelp,\n  XCircle,\n  ChevronDown,\n  ChevronUp,\n  Users,\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\n\nexport default function TieredCandidates({ candidates }) {\n  const [expandedTiers, setExpandedTiers] = useState({\n    exceptional: true,\n    strong: true,\n    qualified: false,\n    potential: false,\n    notRecommended: false,\n  });\n\n  const getTier = (score) => {\n    if (score >= 90) return 'exceptional';\n    if (score >= 80) return 'strong';\n    if (score >= 70) return 'qualified';\n    if (score >= 60) return 'potential';\n    return 'notRecommended';\n  };\n\n  const enrichedCandidates = candidates.map((c, i) => {\n    const matchScore = c.evaluation?.overall?.score * 10 || 0;\n    return {\n      id: i,\n      name: c.name.replace(/_/g, ' '),\n      matchScore,\n      tier: getTier(matchScore),\n      experience: `${c.evaluation?.relevant_experience?.score}/10` || 'N/A',\n      education: `${c.evaluation?.achievements?.score}/10` || 'N/A',\n      location: `${c.evaluation?.professionalism?.score}/10` || 'N/A',\n      skills: [\n        `Clarity: ${c.evaluation?.clarity_and_structure?.score}/10`,\n        `Skills Match: ${c.evaluation?.skills_match?.score}/10`,\n      ],\n    };\n  });\n\n  const candidatesByTier = enrichedCandidates.reduce((acc, candidate) => {\n    const tier = candidate.tier;\n    if (!acc[tier]) acc[tier] = [];\n    acc[tier].push(candidate);\n    return acc;\n  }, {});\n\n  const tierConfig = {\n    exceptional: {\n      label: 'Exceptional Matches',\n      description: 'These candidates closely match the job requirements',\n      icon: Star,\n      color: 'text-yellow-500',\n      bgColor: 'bg-yellow-50',\n      borderColor: 'border-yellow-100',\n      textColor: 'text-yellow-700',\n    },\n    strong: {\n      label: 'Strong Matches',\n      description: 'These candidates match most of the job requirements',\n      icon: Trophy,\n      color: 'text-blue-500',\n      bgColor: 'bg-blue-50',\n      borderColor: 'border-blue-100',\n      textColor: 'text-blue-700',\n    },\n    qualified: {\n      label: 'Qualified Candidates',\n      description: 'These candidates meet the minimum requirements',\n      icon: CheckCircle2,\n      color: 'text-green-500',\n      bgColor: 'bg-green-50',\n      borderColor: 'border-green-100',\n      textColor: 'text-green-700',\n    },\n    potential: {\n      label: 'Potential Fits',\n      description: 'These candidates may need additional training',\n      icon: CircleHelp,\n      color: 'text-gray-500',\n      bgColor: 'bg-gray-50',\n      borderColor: 'border-gray-100',\n      textColor: 'text-gray-700',\n    },\n    notRecommended: {\n      label: 'Not Recommended',\n      description: 'These candidates do not match the requirements',\n      icon: XCircle,\n      color: 'text-red-500',\n      bgColor: 'bg-red-50',\n      borderColor: 'border-red-100',\n      textColor: 'text-red-700',\n    },\n  };\n\n  const toggleTier = (tier) => {\n    setExpandedTiers({\n      ...expandedTiers,\n      [tier]: !expandedTiers[tier],\n    });\n  };\n\n  const renderTier = (tier) => {\n    const config = tierConfig[tier];\n    const candidatesInTier = candidatesByTier[tier] || [];\n    const count = candidatesInTier.length;\n    if (count === 0) return null;\n\n    const Icon = config.icon;\n\n    return (\n      <div key={tier} className={`rounded-lg overflow-hidden mb-4 ${config.borderColor} border`}>\n        <div\n          className={`p-4 ${config.bgColor} flex items-center justify-between cursor-pointer`}\n          onClick={() => toggleTier(tier)}\n        >\n          <div className=\"flex items-center\">\n            <Icon className={`h-5 w-5 ${config.color} mr-2`} />\n            <div>\n              <h3 className=\"font-medium\">{config.label}</h3>\n              <p className=\"text-sm text-gray-600\">{config.description}</p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"text-right\">\n              <span className=\"text-sm font-medium\">{count} candidates</span>\n            </div>\n            <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n              {expandedTiers[tier] ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\n            </Button>\n          </div>\n        </div>\n\n        {expandedTiers[tier] && (\n          <div className=\"p-3 bg-white\">\n            <div className=\"grid grid-cols-1 gap-3\">\n              {candidatesInTier.map((candidate) => (\n                <div key={candidate.id} className=\"p-3 bg-gray-50 rounded flex flex-col sm:flex-row sm:items-center\">\n                  <div className=\"flex-grow\">\n                    <div className=\"flex items-center\">\n                      <h4 className=\"font-medium text-sm\">{candidate.name}</h4>\n                      <Badge className=\"ml-2\">{candidate.matchScore}%</Badge>\n                    </div>\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Experience: {candidate.experience} • Education Score: {candidate.education} • Professionalism: {candidate.location}\n                    </p>\n                    <div className=\"mt-2 flex flex-wrap gap-1\">\n                      {candidate.skills.map((skill, i) => (\n                        <Badge key={i} variant=\"outline\" className=\"mr-1 mb-1 text-xs\">\n                          {skill}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"mt-3 sm:mt-0 flex sm:flex-col items-center sm:items-end\">\n                    <Button variant=\"link\" size=\"sm\" className=\"h-auto p-0 text-primary\">\n                      View Resume\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"text-lg font-medium flex items-center gap-2\">\n          <Users className=\"h-5 w-5 text-gray-500\" />\n          Candidates by Tier\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex flex-wrap items-center gap-4 mb-4 pb-4 border-b\">\n          <span className=\"text-sm font-medium\">Score Tiers:</span>\n          <div className=\"flex items-center text-xs text-yellow-700\">\n            <span className=\"w-3 h-3 rounded-full bg-yellow-500 mr-1\"></span>\n            90-100% Exceptional\n          </div>\n          <div className=\"flex items-center text-xs text-blue-700\">\n            <span className=\"w-3 h-3 rounded-full bg-blue-500 mr-1\"></span>\n            80-89% Strong\n          </div>\n          <div className=\"flex items-center text-xs text-green-700\">\n            <span className=\"w-3 h-3 rounded-full bg-green-500 mr-1\"></span>\n            70-79% Qualified\n          </div>\n          <div className=\"flex items-center text-xs text-gray-700\">\n            <span className=\"w-3 h-3 rounded-full bg-gray-500 mr-1\"></span>\n            60-69% Potential\n          </div>\n          <div className=\"flex items-center text-xs text-red-700\">\n            <span className=\"w-3 h-3 rounded-full bg-red-500 mr-1\"></span>\n            Below 60% Not Recommended\n          </div>\n        </div>\n        {Object.keys(tierConfig).map((tier) => renderTier(tier))}\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useParams, useLocation } from 'wouter';\nimport { \n  Download, \n  Share2\n} from 'lucide-react';\n\nimport PageContainer from '@/components/layout/page-container';\nimport AnalyticsOverview from '@/components/results/analytics-overview-new';\nimport CandidatesTable from '@/components/results/candidates-table';\nimport Charts from '@/components/results/charts';\nimport TopCandidates from '@/components/results/top-candidates';\nimport TieredCandidates from '@/components/results/tiered-candidates';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { useMyContext } from '../hooks/use-context';\n\nexport default function ResultsPage() {\n  const { id } = useParams();\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const [sortType, setSortType] = useState('match');\n  const {analysisResults,setAnalysisResults} = useMyContext();\n\n  console.log('analysisResults', analysisResults);\n  \n  // Mock fetch analyses from sessionStorage\n  const { data: analyses = [] } = useQuery({\n    queryKey: ['/api/analyses'],\n    queryFn: () => {\n      // Get analyses from sessionStorage\n      const storedAnalyses = JSON.parse(sessionStorage.getItem('analyses') || '[]');\n      return storedAnalyses;\n    }\n  });\n  \n  // Find the current analysis or use the first completed one\n  const currentAnalysis = id \n    ? analyses.find(a => a.id === parseInt(id))\n    : analyses.find(a => a.status === 'completed') || analyses[0];\n  \n  // If no ID was provided but we found a completed analysis, update the URL\n  useEffect(() => {\n    if (!id && currentAnalysis) {\n      navigate(`/results/${currentAnalysis.id}`);\n    }\n  }, [id, currentAnalysis, navigate]);\n  \n  // Get candidates from sessionStorage\n  const { \n    data: candidates = [], \n    isLoading: candidatesLoading \n  } = useQuery({\n    queryKey: ['/api/analyses', currentAnalysis?.id, 'candidates'],\n    enabled: !!currentAnalysis?.id,\n    queryFn: () => {\n      // Get candidates from sessionStorage\n      const storedCandidates = JSON.parse(sessionStorage.getItem('candidates') || '[]');\n      const filteredCandidates = storedCandidates.filter(c => c.analysisId === currentAnalysis.id);\n      return filteredCandidates;\n    }\n  });\n\n  \n  // Handle export click\n  const handleExport = () => {\n    toast({\n      title: 'Export started',\n      description: 'Your data is being prepared for download.'\n    });\n    \n    // In a real app, this would call an API to generate and download the export\n    setTimeout(() => {\n      toast({\n        title: 'Export ready',\n        description: 'Your data has been exported successfully.'\n      });\n    }, 2000);\n  };\n  \n  // Handle share click\n  const handleShare = () => {\n    toast({\n      title: 'Share results',\n      description: 'A shareable link has been copied to your clipboard.'\n    });\n  };\n  \n  // If no analysis is selected or found  \n  if (analysisResults?.candidates<=0) {\n    return (\n      <PageContainer title=\"Analysis Results\">\n        <div className=\"flex flex-col items-center justify-center py-12\">\n          <h2 className=\"text-xl font-medium text-gray-900 mb-4\">No analysis results found</h2>\n          <p className=\"text-gray-500 mb-6\">Start a new analysis to see results here</p>\n          <Button onClick={() => navigate('/resume-analyzer')}>\n            Start New Analysis\n          </Button>\n        </div>\n      </PageContainer>\n    );\n  }\n  \n  return (\n    <PageContainer>\n      <div className=\"space-y-6\">\n        {/* Page Header */}\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-2xl font-display font-bold text-text\">Analysis Results</h1>\n          <div className=\"flex space-x-2\">\n            <Button \n              variant=\"default\" \n              onClick={() => navigate(`/resume-analyzer?reanalysis=${currentAnalysis.id}`)}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"></path>\n                <path d=\"M3 3v5h5\"></path>\n              </svg>\n              Rescan Analysis\n            </Button>\n            <Button variant=\"outline\" onClick={handleExport}>\n              <Download className=\"h-4 w-4 mr-2\" />\n              Export\n            </Button>\n            <Button variant=\"outline\" onClick={handleShare}>\n              <Share2 className=\"h-4 w-4 mr-2\" />\n              Share\n            </Button>\n          </div>\n        </div>\n        \n        {/* Results Header */}\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex flex-col md:flex-row md:items-center justify-between\">\n              <div>\n                <h2 className=\"text-xl font-display font-semibold text-text\">{currentAnalysis?.jobTitle}</h2>\n                <p className=\"text-gray-500 mt-1\">\n                  {currentAnalysis?.department || 'No Department'} • Created {new Date(currentAnalysis?.createdAt)?.toLocaleDateString()}\n                </p>\n              </div>\n              <div className=\"mt-4 md:mt-0 flex items-center\">\n                <div className=\"flex items-center bg-gray-100 rounded-md px-3 py-1 mr-4\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                  </svg>\n                  <span className=\"text-gray-700 font-medium\">{currentAnalysis?.candidateCount} Candidates</span>\n                </div>\n                <Select value={sortType} onValueChange={setSortType}>\n                  <SelectTrigger className=\"w-[200px]\">\n                    <SelectValue placeholder=\"Sort by: Match Score\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"match\">Sort by: Match Score</SelectItem>\n                    <SelectItem value=\"experience\">Sort by: Experience</SelectItem>\n                    <SelectItem value=\"education\">Sort by: Education</SelectItem>\n                    <SelectItem value=\"name\">Sort by: Name</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* Analytics Overview */}\n        <AnalyticsOverview \n          candidates={candidates} \n          loading={candidatesLoading} \n        />\n        \n        {/* Top Candidates Section */}\n        {!candidatesLoading && candidates.length > 0 && (\n          <TopCandidates candidates={candidates} />\n        )}\n        \n        {/* Charts Row */}\n        <Charts \n          candidates={analysisResults?.candidates}\n          loading={candidatesLoading}\n        />\n        \n        {/* Tiered Candidates Section */}\n        {!candidatesLoading && analysisResults?.candidates?.length > 0 && (\n          <TieredCandidates candidates={analysisResults?.candidates} />\n        )}\n        \n        {/* Candidates Table */}\n        <CandidatesTable \n          candidates={analysisResults?.candidates || candidates}\n          loading={candidatesLoading}\n          sortType={sortType}\n        />\n      </div>\n    </PageContainer>\n  );\n}\n","import { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Link } from 'wouter';\nimport { Search, Filter, User } from 'lucide-react';\n\nimport PageContainer from '@/components/layout/page-container';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default function HistoryPage() {\n  // State for filters\n  const [dateRange, setDateRange] = useState('all-time');\n  const [department, setDepartment] = useState('all');\n  const [status, setStatus] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Fetch analyses\n  const { data: analyses = [] } = useQuery({\n    queryKey: ['/api/analyses'],\n  });\n  \n  // Filter analyses based on selected filters\n  const filteredAnalyses = analyses.filter(analysis => {\n    // Search filter\n    if (searchQuery && !analysis.name.toLowerCase().includes(searchQuery.toLowerCase()) && \n        !analysis.jobTitle.toLowerCase().includes(searchQuery.toLowerCase())) {\n      return false;\n    }\n    \n    // Status filter\n    if (status !== 'all' && analysis.status !== status) {\n      return false;\n    }\n    \n    // Department filter\n    if (department !== 'all' && analysis.department !== department) {\n      return false;\n    }\n    \n    // Date range filter (simplified for demo)\n    if (dateRange !== 'all-time') {\n      const analysisDate = new Date(analysis.createdAt);\n      const now = new Date();\n      \n      if (dateRange === 'last-7' && (now - analysisDate) > 7 * 24 * 60 * 60 * 1000) {\n        return false;\n      } else if (dateRange === 'last-30' && (now - analysisDate) > 30 * 24 * 60 * 60 * 1000) {\n        return false;\n      } else if (dateRange === 'last-90' && (now - analysisDate) > 90 * 24 * 60 * 60 * 1000) {\n        return false;\n      }\n    }\n    \n    return true;\n  });\n  \n  // Sort analyses by date (newest first)\n  const sortedAnalyses = [...filteredAnalyses].sort((a, b) => \n    new Date(b.createdAt) - new Date(a.createdAt)\n  );\n  \n  return (\n    <PageContainer title=\"Analysis History\">\n      <div className=\"space-y-6\">\n        {/* Search and Filter Row */}\n        <div className=\"flex flex-col sm:flex-row justify-between gap-4\">\n          <div className=\"relative flex-grow\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 h-4 w-4\" />\n            <Input\n              placeholder=\"Search history...\"\n              className=\"pl-9\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n          </div>\n          <Button variant=\"outline\">\n            <Filter className=\"h-4 w-4 mr-2\" />\n            Filter\n          </Button>\n        </div>\n        \n        {/* History Filters */}\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex flex-col md:flex-row md:items-center space-y-4 md:space-y-0 md:space-x-4\">\n              <div className=\"flex-1\">\n                <label htmlFor=\"date-range\" className=\"block text-sm font-medium text-gray-700 mb-1\">Date Range</label>\n                <Select value={dateRange} onValueChange={setDateRange}>\n                  <SelectTrigger id=\"date-range\">\n                    <SelectValue placeholder=\"All Time\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all-time\">All Time</SelectItem>\n                    <SelectItem value=\"last-7\">Last 7 days</SelectItem>\n                    <SelectItem value=\"last-30\">Last 30 days</SelectItem>\n                    <SelectItem value=\"last-90\">Last 90 days</SelectItem>\n                    <SelectItem value=\"custom\">Custom Range</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex-1\">\n                <label htmlFor=\"department\" className=\"block text-sm font-medium text-gray-700 mb-1\">Department</label>\n                <Select value={department} onValueChange={setDepartment}>\n                  <SelectTrigger id=\"department\">\n                    <SelectValue placeholder=\"All Departments\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Departments</SelectItem>\n                    <SelectItem value=\"Engineering\">Engineering</SelectItem>\n                    <SelectItem value=\"Marketing\">Marketing</SelectItem>\n                    <SelectItem value=\"Product\">Product</SelectItem>\n                    <SelectItem value=\"HR\">HR</SelectItem>\n                    <SelectItem value=\"Sales\">Sales</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex-1\">\n                <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                <Select value={status} onValueChange={setStatus}>\n                  <SelectTrigger id=\"status\">\n                    <SelectValue placeholder=\"All Statuses\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Statuses</SelectItem>\n                    <SelectItem value=\"completed\">Completed</SelectItem>\n                    <SelectItem value=\"processing\">Processing</SelectItem>\n                    <SelectItem value=\"queued\">Queued</SelectItem>\n                    <SelectItem value=\"failed\">Failed</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex items-end\">\n                <Button \n                  className=\"h-10\"\n                  onClick={() => {\n                    setDateRange('all-time');\n                    setDepartment('all');\n                    setStatus('all');\n                    setSearchQuery('');\n                  }}\n                >\n                  Apply\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* History Table */}\n        <Card>\n          <CardHeader className=\"px-6 py-5 border-b border-gray-100\">\n            <CardTitle className=\"font-display font-semibold text-lg text-text\">\n              All Analyses\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            {filteredAnalyses.length === 0 ? (\n              <div className=\"py-8 text-center\">\n                <p className=\"text-gray-500 mb-4\">No analyses found matching your filters</p>\n                <Button onClick={() => {\n                  setDateRange('all-time');\n                  setDepartment('all');\n                  setStatus('all');\n                  setSearchQuery('');\n                }}>\n                  Clear Filters\n                </Button>\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr className=\"bg-gray-50\">\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Analysis Name</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Department</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Candidates</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created By</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {sortedAnalyses.map(analysis => (\n                      <tr key={analysis.id} className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-text\">{analysis.jobTitle}</div>\n                          <div className=\"text-xs text-gray-500\">\n                            {analysis.averageScore ? `Match Score: ${analysis.averageScore}%` : ''}\n                          </div>\n                        </td>\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">{analysis.department || 'Not specified'}</div>\n                        </td>\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">{analysis.candidateCount}</div>\n                        </td>\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <Avatar className=\"h-8 w-8\">\n                              <AvatarImage src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80\" alt=\"User\" />\n                              <AvatarFallback><User className=\"h-4 w-4\" /></AvatarFallback>\n                            </Avatar>\n                            <div className=\"ml-3\">\n                              <div className=\"text-sm text-gray-900\">Alex Johnson</div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-500\">\n                            {formatDistanceToNow(new Date(analysis.createdAt), { addSuffix: true })}\n                          </div>\n                        </td>\n                        <td className=\"px-4 py-4 whitespace-nowrap\">\n                          <Badge variant={getStatusVariant(analysis.status)}>\n                            {getStatusLabel(analysis.status)}\n                          </Badge>\n                        </td>\n                        <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium\">\n                          <Link href={`/results/${analysis.id}`}>\n                            <Button variant=\"link\" className=\"text-primary\">View</Button>\n                          </Link>\n                          <Button variant=\"link\" className=\"text-gray-500\">Export</Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n            \n            {filteredAnalyses.length > 0 && (\n              <div className=\"px-6 py-4 border-t border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"text-sm text-gray-500\">\n                    Showing <span className=\"font-medium\">1</span> to <span className=\"font-medium\">{filteredAnalyses.length}</span> of <span className=\"font-medium\">{analyses.length}</span> analyses\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button variant=\"outline\" size=\"sm\" disabled>Previous</Button>\n                    <Button variant=\"outline\" size=\"sm\" className=\"bg-primary text-white\">1</Button>\n                    <Button variant=\"outline\" size=\"sm\" disabled>Next</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </PageContainer>\n  );\n}\n\n// Helper functions\nfunction getStatusVariant(status) {\n  switch(status) {\n    case 'completed': return 'success';\n    case 'processing': return 'default';\n    case 'queued': return 'secondary';\n    case 'failed': return 'destructive';\n    default: return 'outline';\n  }\n}\n\nfunction getStatusLabel(status) {\n  switch(status) {\n    case 'completed': return 'Completed';\n    case 'processing': return 'Processing';\n    case 'queued': return 'Queued';\n    case 'failed': return 'Failed';\n    default: return status;\n  }\n}\n","import { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { AuthProvider } from \"@/hooks/use-auth\";\nimport { ProtectedRoute } from \"./lib/protected-route\";\n\nimport NotFound from \"@/pages/not-found\";\nimport AuthPage from \"@/pages/auth-page\";\nimport DashboardPage from \"@/pages/dashboard-page\";\nimport ResumeAnalyzerPage from \"@/pages/resume-analyzer-page\";\nimport AnalysisQueuePage from \"@/pages/analysis-queue-page\";\nimport ResultsPage from \"@/pages/results-page\";\nimport HistoryPage from \"@/pages/history-page\";\nimport { MyContextProvider } from \"./hooks/use-context\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <ProtectedRoute path=\"/\" component={DashboardPage} />\n      <ProtectedRoute path=\"/resume-analyzer\" component={ResumeAnalyzerPage} />\n      <ProtectedRoute path=\"/analysis-queue\" component={AnalysisQueuePage} />\n      <ProtectedRoute path=\"/results/:id\" component={ResultsPage} />\n      <ProtectedRoute path=\"/results\" component={ResultsPage} />\n      <ProtectedRoute path=\"/history\" component={HistoryPage} />\n      <Route path=\"/auth\" component={AuthPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <MyContextProvider>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n        </MyContextProvider>\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n"],"names":["throwIfResNotOk","res","text","apiRequest","method","url","data","getQueryFn","unauthorizedBehavior","queryKey","queryClient","QueryClient","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","props","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","cn","inputs","twMerge","clsx","ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","className","ref","jsx","ToastPrimitives.Viewport","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","jsxs","TooltipProvider","TooltipPrimitive.Provider","TooltipContent","sideOffset","TooltipPrimitive.Content","users","pgTable","serial","insertUserSchema","createInsertSchema","analyses","integer","jsonb","timestamp","candidates","notifications","boolean","AuthContext","createContext","mockUser","AuthProvider","children","user","error","isLoading","useQuery","loginMutation","useMutation","credentials","registerMutation","logoutMutation","useAuth","context","useContext","ProtectedRoute","path","Component","Route","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","NotFound","AlertCircle","buttonVariants","Button","size","asChild","Comp","Slot","labelVariants","Label","LabelPrimitive.Root","Form","FormProvider","FormFieldContext","React.createContext","FormField","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","FormItem","React.useId","FormLabel","formItemId","FormControl","formDescriptionId","formMessageId","FormDescription","FormMessage","body","Input","type","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","Check","loginSchema","registerSchema","val","AuthPage","activeTab","setActiveTab","useState","loginForm","useForm","zodResolver","registerForm","onLoginSubmit","onRegisterSubmit","confirmPassword","acceptTerms","userData","UserRound","field","LockKeyhole","Mail","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","Sidebar","location","useLocation","mobileMenuOpen","setMobileMenuOpen","toggleMobileMenu","closeMobileMenu","navItems","LayoutDashboard","FileSearch","Clock","BarChartBig","History","Settings","handleLogout","isActive","renderNavItems","item","active","Link","mobileMenuButton","Menu","mobileSidebar","LogOut","Fragment","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","ChevronRight","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","Circle","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","Avatar","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","AvatarFallback","AvatarPrimitive.Fallback","NotificationItem","notification","getTypeStyles","getTypeIcon","styles","Topbar","showNotifications","setShowNotifications","refetchNotifications","unreadCount","n","handleNotificationClick","getInitials","name","Bell","PageContainer","StatsCard","value","change","icon","color","icons","FileText","UserSearch","Award","changeColorClasses","badgeVariants","Badge","RecentAnalysesTable","analysis","formatDistanceToNow","getStatusVariant","getStatusLabel","status","Progress","ProgressPrimitive.Root","ProgressPrimitive.Indicator","InProgressCard","progressPercentage","getRemainingTime","getStartTime","DashboardPage","completedAnalyses","a","inProgressAnalyses","totalAnalyses","totalCandidates","sum","queuedAnalyses","averageScores","avgMatchScore","score","PlusIcon","ResumeDropzone","files","setFiles","onUploadProgress","dragActive","setDragActive","batchProgress","setBatchProgress","onDrop","useCallback","acceptedFiles","validFiles","file","totalFiles","processedCount","processNextBatch","startIndex","endIndex","currentBatch","progress","prevFiles","removeFile","_","i","getRootProps","getInputProps","isDragActive","useDropzone","getFileIcon","fileType","FileArchive","Upload","Textarea","jobTemplates","JobDescriptionInput","onChange","isGenerating","setIsGenerating","generateJobDescription","template","Wand2","e","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","dummyData","MyContext","MyContextProvider","analysisResults","setAnalysisResults","useMyContext","analysisFormSchema","ResumeAnalyzerPage","showAdvancedFilters","setShowAdvancedFilters","uploadedFiles","setUploadedFiles","navigate","uploadProgress","setUploadProgress","isReanalysis","setIsReanalysis","originalAnalysis","setOriginalAnalysis","useEffect","reanalysisId","form","createAnalysisMutation","resolve","analysisId","simulateAnalysisProgress","generateTieredScore","total","mockCandidates","matchScore","tier","updatedAnalyses","avgScore","acc","c","completionNotification","onSubmit","formData","_res","response","AnalysisQueuePage","refetch","handleRefresh","handleCancel","cancelNotification","getProgressPercentage","getEstimatedTime","RefreshCw","updatedNotifications","getNotificationTypeStyles","getNotificationTypeIcon","AnalyticsOverview","loading","metrics","sortedCandidates","b","averageScore","candidate","top10Percent","top10Score","above90Count","experienceValues","match","_a","totalExperience","averageExperience","skillsCount","skillsCoverage","BarChart2","Calendar","Wrench","CandidatesTable","sortType","searchTerm","setSearchTerm","currentPage","setCurrentPage","candidatesPerPage","filteredCandidates","searchLower","_b","_c","skill","expA","_d","eduRank","rankA","_e","indexOfLastCandidate","indexOfFirstCandidate","currentCandidates","totalPages","handleContact","handleViewDetails","getMatchScoreColor","getMatchScoreLabel","Search","_g","_f","Eye","prev","pageNumber","COLORS","EvaluationCharts","getCategoryAverages","category","average","w","getScoreDistribution","scoreRanges","range","r","getTopCandidates","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","RADIAN","radius","x","y","categoryAverages","scoreDistribution","topCandidates","CustomTooltip","payload","ResponsiveContainer","PieChart","Pie","entry","Cell","LabelList","Tooltip","Legend","BarChart","XAxis","YAxis","Bar","TopCandidates","getFormattedSkills","skills","s","getPositionBadge","Star","User","TieredCandidates","expandedTiers","setExpandedTiers","getTier","candidatesByTier","_h","_j","_i","_l","_k","tierConfig","Trophy","CheckCircle2","CircleHelp","XCircle","toggleTier","renderTier","config","candidatesInTier","Icon","Users","ResultsPage","useParams","setSortType","currentAnalysis","candidatesLoading","handleExport","handleShare","Download","Share2","Charts","HistoryPage","dateRange","setDateRange","department","setDepartment","setStatus","searchQuery","setSearchQuery","filteredAnalyses","analysisDate","now","sortedAnalyses","Filter","Router","Switch","App","QueryClientProvider","createRoot"],"mappings":"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"}